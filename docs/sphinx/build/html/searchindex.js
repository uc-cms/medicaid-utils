Search.setIndex({"docnames": ["index", "medicaid_utils", "medicaid_utils.adapted_algorithms", "medicaid_utils.adapted_algorithms.py_betos", "medicaid_utils.adapted_algorithms.py_cdpsmrx", "medicaid_utils.adapted_algorithms.py_ed_pqi", "medicaid_utils.adapted_algorithms.py_elixhauser", "medicaid_utils.adapted_algorithms.py_ip_pqi", "medicaid_utils.adapted_algorithms.py_low_value_care", "medicaid_utils.adapted_algorithms.py_nyu_billings", "medicaid_utils.adapted_algorithms.py_pmca", "medicaid_utils.common_utils", "medicaid_utils.filters", "medicaid_utils.filters.claims", "medicaid_utils.filters.patients", "medicaid_utils.other_datasets", "medicaid_utils.preprocessing", "medicaid_utils.topics", "medicaid_utils.topics.obgyn", "medicaid_utils.topics.oud", "modules"], "filenames": ["index.rst", "medicaid_utils.rst", "medicaid_utils.adapted_algorithms.rst", "medicaid_utils.adapted_algorithms.py_betos.rst", "medicaid_utils.adapted_algorithms.py_cdpsmrx.rst", "medicaid_utils.adapted_algorithms.py_ed_pqi.rst", "medicaid_utils.adapted_algorithms.py_elixhauser.rst", "medicaid_utils.adapted_algorithms.py_ip_pqi.rst", "medicaid_utils.adapted_algorithms.py_low_value_care.rst", "medicaid_utils.adapted_algorithms.py_nyu_billings.rst", "medicaid_utils.adapted_algorithms.py_pmca.rst", "medicaid_utils.common_utils.rst", "medicaid_utils.filters.rst", "medicaid_utils.filters.claims.rst", "medicaid_utils.filters.patients.rst", "medicaid_utils.other_datasets.rst", "medicaid_utils.preprocessing.rst", "medicaid_utils.topics.rst", "medicaid_utils.topics.obgyn.rst", "medicaid_utils.topics.oud.rst", "modules.rst"], "titles": ["Welcome to medicaid_utils\u2019s documentation!", "medicaid_utils package", "medicaid_utils.adapted_algorithms package", "medicaid_utils.adapted_algorithms.py_betos package", "medicaid_utils.adapted_algorithms.py_cdpsmrx package", "medicaid_utils.adapted_algorithms.py_ed_pqi package", "medicaid_utils.adapted_algorithms.py_elixhauser package", "medicaid_utils.adapted_algorithms.py_ip_pqi package", "medicaid_utils.adapted_algorithms.py_low_value_care package", "medicaid_utils.adapted_algorithms.py_nyu_billings package", "medicaid_utils.adapted_algorithms.py_pmca package", "medicaid_utils.common_utils package", "medicaid_utils.filters package", "medicaid_utils.filters.claims package", "medicaid_utils.filters.patients package", "medicaid_utils.other_datasets package", "medicaid_utils.preprocessing package", "medicaid_utils.topics package", "medicaid_utils.topics.obgyn package", "medicaid_utils.topics.oud package", "medicaid_utils"], "terms": {"packag": [0, 20], "subpackag": [0, 18, 19, 20], "adapted_algorithm": [0, 1, 20], "common_util": [0, 1, 20], "submodul": [0, 1, 2, 12, 17, 20], "dataframe_util": [0, 1, 20], "modul": [0, 1, 2, 12, 17, 20], "link": [0, 1, 20], "recip": [0, 1, 20], "stats_util": [0, 1, 20], "usps_address": [0, 1, 20], "filter": [0, 1, 8, 15, 16, 20], "other_dataset": [0, 1, 20], "fqhc": [0, 1, 19, 20], "hcri": [0, 1, 20], "npi": [0, 1, 18, 20], "ud": [0, 1, 20], "zip": [0, 1, 16, 20], "preprocess": [0, 1, 14, 20], "max_cc": [0, 1, 18, 20], "max_fil": [0, 1, 14, 20], "max_ip": [0, 1, 20], "max_ot": [0, 1, 20], "max_p": [0, 1, 20], "taf_fil": [0, 1, 14, 20], "taf_ip": [0, 1, 20], "taf_lt": [0, 1, 20], "taf_ot": [0, 1, 20], "taf_p": [0, 1, 20], "taf_rx": [0, 1, 20], "topic": [0, 1, 20], "index": [0, 8, 9, 13, 16], "search": 0, "page": 0, "thi": [1, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19], "put": 1, "togeth": [1, 16], "commonli": [1, 16, 18, 19], "us": [1, 3, 4, 7, 8, 9, 10, 11, 14, 15, 16, 18, 19], "variabl": [1, 8, 10, 11, 16], "construct": [1, 8, 16, 19], "risk": [1, 4, 16], "adjust": [1, 4, 16], "algorithm": [1, 7, 9, 10], "medicaid": [1, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16], "data": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16], "py_beto": [1, 2], "betos_proc_cod": [1, 2], "py_cdpsmrx": [1, 2], "cdps_rx_risk_adjust": [1, 2], "py_ed_pqi": [1, 2], "ed_pqi": [1, 2], "py_elixhaus": [1, 2], "elixhauser_comorbid": [1, 2], "py_ip_pqi": [1, 2], "data_gener": [1, 2], "prevention_quality_ind": [1, 2], "py_low_value_car": [1, 2], "low_value_car": [1, 2], "py_nyu_bil": [1, 2], "billings_": [1, 2], "py_pmca": [1, 2], "pmca": [1, 2], "convert_ddcols_to_datetim": [1, 11], "copy_ddcol": [1, 11], "export": [1, 11, 14, 16], "fix_index": [1, 2, 5, 11], "get_first_day_gap": [1, 11], "get_reduced_column_nam": [1, 11], "prepare_dtypes_for_csv": [1, 11], "safe_convert_int_to_str": [1, 11], "sas_to_panda": [1, 11], "toggle_datetime_str": [1, 11], "get_max_parquet_loc": [1, 11], "get_taf_parquet_loc": [1, 11], "convert_to_int_str": [1, 11], "is_numb": [1, 11], "log_assert": [1, 11], "remove_ignore_if_not_exist": [1, 11], "remove_tail_dot_zero": [1, 11], "setup_logg": [1, 11], "color_positive_green": [1, 11], "compute_contingency_t": [1, 11], "compute_descript": [1, 11], "compute_missing_stat": [1, 11], "compute_t_stat": [1, 11], "cramers_corrected_stat": [1, 11], "get_cont_table_statewis": [1, 11], "get_contingency_t": [1, 11], "get_covar_plot": [1, 11], "get_descript": [1, 11], "get_missingness_stat": [1, 11], "get_phi": [1, 11], "get_ranksum_t": [1, 11], "get_ranksum_table_statewis": [1, 11], "get_utilisation_histogram": [1, 11], "addressstandardizationwebtool": [1, 11], "api": [1, 11, 15], "get_standardized_address": [1, 11], "uspsaddress": [1, 11], "origin": [1, 9, 11], "standard": [1, 11, 15], "zipcod": [1, 11, 15, 16], "uspsshippingapi": [1, 11], "send_request": [1, 11], "url": [1, 11], "dump_xml": [1, 11], "get_text": [1, 11], "claim": [1, 3, 5, 7, 8, 10, 12, 14, 16, 18, 19], "dx_and_proc": [1, 12], "rx": [1, 4, 12, 14, 16], "patient": [1, 4, 10, 12, 13, 16], "cohort_extract": [1, 12], "generate_oscar_fqhc_npi": [1, 15], "get_file_name_dict": [1, 15], "get_fqhc_crosswalk": [1, 15], "clean_address": [1, 15], "clean_hclinic_nam": [1, 15], "clean_zip": [1, 15], "combine_and_clean_hcris_fil": [1, 15], "compute_basic_match_pur": [1, 15], "compute_door_no_info": [1, 15], "compute_match_pur": [1, 15], "create_npi_fqhc_crosswalk": [1, 15], "filter_partial_match": [1, 15], "flatten_nppes_query_result": [1, 15], "fuzzy_match": [1, 15], "get_taxonomi": [1, 15], "nppes_api_request": [1, 15], "process_address_column": [1, 15], "standardize_address": [1, 15], "street_address": [1, 15], "cleanup_raw_npi_fil": [1, 15], "generate_npi_taxonomy_map": [1, 15], "wide_to_long_nppes_taxonomy_fil": [1, 15], "combine_and_clean_uds_fil": [1, 15], "combine_uds_fqhc_npi_crosswalk": [1, 15], "generate_and_combine_fqhc_npi_crosswalk": [1, 15], "generate_bhcmisid_fqhc_crosswalk": [1, 15], "generate_zip_pcsa_ruca_crosswalk": [1, 15], "pool_zipcode_pcsa_dataset": [1, 15], "maxcc": [1, 16, 18], "agg_condit": [1, 16], "get_chronic_condit": [1, 16], "maxfil": [1, 14, 16], "add_gend": [1, 16], "cache_result": [1, 16], "calculate_pay": [1, 16], "clean": [1, 14, 15, 16], "clean_diag_cod": [1, 16], "clean_proc_cod": [1, 16], "flag_ed_us": [1, 16], "get_claim_inst": [1, 16], "pq_export": [1, 16], "process_date_col": [1, 16], "maxip": [1, 16], "flag_common_exclus": [1, 16], "flag_dupl": [1, 16], "flag_ip_overlap": [1, 16], "maxot": [1, 16], "add_ot_flag": [1, 16], "find_ot_ip_overlap": [1, 16], "flag_dent": [1, 16], "flag_em": [1, 16], "flag_ip_overlaps_and_": [1, 16], "flag_transport": [1, 16], "maxp": [1, 16], "add_eligibility_status_column": [1, 16], "flag_dual": [1, 16], "flag_restricted_benefit": [1, 16], "flag_rur": [1, 16], "flag_tanf": [1, 16], "taffil": [1, 14, 16], "clean_cod": [1, 16], "clean_ndc_cod": [1, 16], "flag_ffs_and_encounter_claim": [1, 16], "gather_bene_level_diag_ndc_cod": [1, 16], "tafip": [1, 16], "taflt": [1, 16], "tafot": [1, 16], "tafp": [1, 16], "add_mas_bo": [1, 16], "add_risk_adjustment_scor": [1, 16], "compute_enrollment_gap": [1, 16], "flag_ffs_month": [1, 16], "flag_managed_care_month": [1, 16], "flag_medicaid_enrolled_month": [1, 16], "tafrx": [1, 16], "obgyn": [1, 17], "cohort_ind": [1, 17], "comorb": [1, 17], "hospit": [1, 16, 17, 19], "oud": [1, 17], "care_set": [1, 17], "cooccurring_condit": [1, 17], "medication_and_behavioral_health": [1, 17], "betosproccod": [2, 3], "data_fold": [2, 3, 4, 5, 6, 7, 8, 9, 10, 15], "filenam": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "get_betos_cat": [2, 3], "get_betos_cpt_crosswalk": [2, 3], "package_fold": [2, 3, 4, 5, 6, 7, 8, 9, 10], "assign_betos_cat": [2, 3], "cdpsrxriskadjust": [2, 4], "add_age_and_gender_col": [2, 4], "add_cdps_category_col": [2, 4], "add_mrx_cat_col": [2, 4], "calculate_risk": [2, 4], "combine_cdps_mrx_hierarchi": [2, 4], "edpreventionqualityind": [2, 5], "flag_potentially_preventable_ed_visit": [2, 5], "get_patient_exclusion_ind": [2, 5], "get_ed_pqi": [2, 5], "elixhauserscor": [2, 6], "calculate_final_scor": [2, 6], "flag_comorbid": [2, 6], "score": [2, 4, 6, 15, 16], "generate_dxgrp_fil": [2, 7], "generate_prgrp_fil": [2, 7], "preventionqualityind": [2, 7], "add_acsc_cat_col": [2, 7], "add_area_level_indicator_col": [2, 7], "add_drg_col": [2, 7], "add_neonate_newborn_col": [2, 7], "add_pr_dxgrp_col": [2, 7], "logger_nam": [2, 7, 9, 11, 13, 14, 15], "prepare_col": [2, 7], "pqirecod": [2, 7], "lowvaluecar": [2, 8], "construct_low_value_care_measur": [2, 8], "generate_condn_and_eligibility_ind": [2, 8], "get_dat": [2, 8], "get_dates_with_elig": [2, 8], "get_denom_measure_spec": [2, 8], "get_diag_proc_cod": [2, 8], "get_diag_proc_spec": [2, 8], "normalize_condition_nam": [2, 8], "billings": [2, 9], "cat": [2, 3, 9], "dct_category_dx_cod": [2, 9], "dct_recode_non_startswith": [2, 9], "df_eddx": [2, 9], "get_nyu_ed_categori": [2, 9], "get_nyu_ed_proba_for_dx_cod": [2, 9], "get_special_categori": [2, 9], "is_peds_acs": [2, 9], "lst_special_ed_categori": [2, 9], "pdf_nonstartswith_recod": [2, 9], "pdf_recod": [2, 9], "pdf_startswith_recod": [2, 9], "recode_diag_cod": [2, 9], "get_nyu_ed_proba": [2, 9], "pediatricmedicalcomplex": [2, 10], "create_pmca_condition_count": [2, 10], "get_pmca_chronic_condition_categori": [2, 10], "pmca_chronic_condit": [2, 10], "python": [3, 6, 9], "appli": [3, 4, 14], "berenson": 3, "eggor": 3, "type": [3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19], "servic": [3, 8, 9, 11, 14, 16, 19], "beto": 3, "categor": [3, 9, 18], "class": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 18], "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19], "object": [3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 16], "user": [3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15], "manu_1": [3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15], "document": [3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15], "pyworkspac": [3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15], "util": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16], "py": [3, 4, 5, 6, 7, 8, 9, 10, 13, 14], "classmethod": [3, 4, 5, 6, 7, 8, 9, 10, 16], "df": [3, 4, 5, 6, 7, 9, 10, 11, 14, 15, 16], "datafram": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 18, 19], "pdf_crosswalk": 3, "claim_typ": [3, 11, 16], "str": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18], "proc_code_prefix": 3, "prcdr_cd": [3, 16], "get": [3, 9, 11, 13, 15, 16], "claimwis": 3, "code": [3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 18, 19], "categori": [3, 4, 9, 10, 11, 16], "relat": [3, 4, 7, 9, 16, 18, 19], "cpt": [3, 13], "procedur": [3, 7, 8, 13, 14, 16, 19], "paramet": [3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 18, 19], "dask": [3, 4, 6, 7, 9, 10, 11, 13, 14, 16, 18], "panda": [3, 8, 11, 13, 14], "x": [3, 9, 11, 15, 16], "crosswalk": [3, 15, 16], "inform": [3, 11, 14, 16], "medicar": [3, 16], "default": [3, 4, 6, 10, 13, 14, 16, 18], "column": [3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19], "name": [3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 18], "prefix": [3, 8], "return": [3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19], "year": [3, 7, 8, 11, 14, 15, 16], "int": [3, 8, 9, 11, 14, 15, 16], "The": [3, 4, 6, 9, 10, 14, 16], "ha": [3, 4, 10, 13, 14, 15, 16, 18, 19], "below": [3, 4, 9, 16], "cpt_code": 3, "hcpc": 3, "a0010": 3, "v9999": 3, "ama": 3, "4": [3, 9, 16], "00100": 3, "99999": 3, "betos_cod": 3, "d1a": 3, "z2": 3, "betos_code_nam": 3, "descript": [3, 7, 9], "betos_cat": 3, "abbrev": 3, "7": [3, 9, 14, 16], "valu": [3, 7, 8, 10, 14, 15, 16], "evalu": 3, "AND": [3, 16, 19], "manag": [3, 16], "betos_ev": 3, "betos_proc": 3, "imag": 3, "betos_img": 3, "test": 3, "betos_test": 3, "durabl": 3, "medic": [3, 10, 16, 19], "equip": 3, "betos_dm": 3, "other": [3, 16], "betos_oth": 3, "except": 3, "unclassifi": [3, 9], "betos_uncla": 3, "public": [3, 15], "file": [3, 6, 8, 9, 13, 14, 15, 16, 18, 19], "output": [3, 4, 6, 7], "If": [3, 13, 16], "concat_codes_to_list": 3, "true": [3, 5, 11, 14, 16], "lst_betos_cod": 3, "comma": [3, 4, 6, 10, 16], "separ": [3, 4, 6, 10, 16], "lst_betos_cat": 3, "els": 3, "One": 3, "boolean": [3, 18], "each": [3, 6, 8, 9, 10, 16], "all": [3, 8, 14, 15, 16], "core": [4, 8, 11, 13, 18], "list": [4, 6, 7, 8, 10, 11, 13, 14, 15, 16], "add": [4, 7, 9, 13, 16, 18, 19], "ag": [4, 14, 16], "gender": [4, 16], "covari": [4, 18, 19], "cdp": [4, 10], "model": 4, "a_under1": 4, "0": [4, 9, 13, 14, 16, 18, 19], "1": [4, 7, 9, 11, 14, 16, 18, 19], "a_1_4": 4, "5": [4, 9, 10, 16], "a_5_14m": 4, "15": [4, 9], "male": 4, "a_5_14f": 4, "femal": [4, 14, 16], "a_15_24m": 4, "25": 4, "a_15_24f": 4, "a_25_44m": 4, "45": [4, 18], "a_25_44f": 4, "a_45_64m": 4, "65": 4, "a_45_64f": 4, "a_65": 4, "lst_diag_cd_col_nam": 4, "p": [4, 14, 16], "lst_diag_cd": 4, "lst_ndc_col_nam": 4, "lst_ndc": 4, "mrx": 4, "lst_cov": 4, "score_col_nam": 4, "calcul": [4, 10, 11, 16, 18], "follow": [4, 16], "new": [4, 7, 9, 16, 18, 19], "dtype": 4, "float64": 4, "hierarch": [4, 16], "rollup": 4, "lst_diag_col_nam": [4, 6], "function": [4, 8, 9, 10, 13, 14, 16, 18, 19], "expect": 4, "input": [4, 6, 9, 13, 14], "aggreg": [4, 8, 16], "level": [4, 5, 6, 8, 10, 11, 15, 16, 19], "contain": [4, 6, 8, 18], "diagnosi": [4, 6, 7, 8, 9, 10, 13, 14, 16, 19], "ndc": [4, 13, 16, 19], "dure": [4, 16], "observ": [4, 6, 10], "time": 4, "period": [4, 6, 10], "bene": [4, 6, 8, 14, 16], "ndc_code": 4, "program": [5, 10, 16], "creat": [5, 8, 10, 14, 15, 16, 19], "potenti": 5, "prevent": [5, 9, 16], "ed": [5, 8, 9, 16], "visit": [5, 9, 16], "indic": [5, 7, 8, 9, 10, 13, 14, 16, 18, 19], "sheryl": 5, "davi": 5, "ellen": 5, "schultz": 5, "et": [5, 10, 16], "al": [5, 8, 10, 16], "2017": [5, 15], "df_ed": 5, "df_p": 5, "months_restrict": 5, "fals": [5, 11, 13, 14, 15, 16], "df_ip": [5, 16], "df_ot": [5, 19], "index_nam": [5, 11], "drop_column": [5, 11], "restrict_month": 5, "comput": [6, 15, 16], "elixhaus": [6, 16], "comorbid": [6, 18], "output_column_nam": 6, "elixhauser_scor": 6, "cms_format": [6, 9, 13, 14], "max": [6, 8, 9, 13, 14, 16, 18], "should": [6, 7, 13, 14, 16], "": [6, 7, 10, 11, 15, 16, 18, 19], "from": [6, 7, 10, 11, 14, 15, 16], "taf": [6, 9, 13, 14, 16], "cm": [6, 7, 9, 13, 14, 15], "format": [6, 9, 11, 13, 14, 15, 16], "tapq01": 7, "diabet": [7, 18], "short": 7, "term": [7, 18], "complic": 7, "tapq02": 7, "perfor": 7, "appendix": 7, "tapq03": 7, "long": [7, 15], "tapq05": 7, "copd": [7, 18], "tapq07": 7, "hypertens": [7, 18], "tapq08": 7, "congest": 7, "heart": 7, "failur": 7, "tapq10": 7, "dehydr": 7, "tapq11": 7, "bacteri": 7, "pneumonia": 7, "tapq12": 7, "urinari": 7, "infect": 7, "tapq13": 7, "angina": 7, "tapq14": 7, "uncontrol": 7, "tapq15": 7, "adult": [7, 16], "asthma": 7, "tapq16": 7, "lower": [7, 14], "extrem": 7, "amput": 7, "tapq90": 7, "overal": 7, "tapq91": 7, "acut": 7, "tapq92": 7, "chronic": [7, 10, 16, 18], "tapd14": 7, "pediatr": [7, 9, 10], "tapd15": 7, "tapd16": 7, "gastroenter": 7, "tapd17": 7, "tapd18": 7, "tapq09": 7, "low": [7, 8], "birth": [7, 16, 18], "weight": 7, "tapd90": 7, "tapd91": 7, "tapd92": 7, "immundr": 7, "mdc24": 7, "mdc25": 7, "mdcnew": 7, "icdver": 7, "neonat": 7, "newborn": 7, "dx": [7, 8, 9], "9": [7, 9, 10, 13, 14, 16, 19], "pr": 7, "6": [7, 9, 13, 16], "acdiasd": 7, "acpgasd": 7, "acsappd": 7, "acsap2d": 7, "acdiald": 7, "acsastd": 7, "respan": 7, "accopdd": 7, "accpd2d": 7, "acshypd": 7, "acshy2d": 7, "crenlfd": 7, "physidb": 7, "acschfd": 7, "acsch2d": 7, "livebnd": 7, "v29d": 7, "liveb2d": 7, "acsdehd": 7, "acsbacd": 7, "acsba2d": 7, "hyperid": 7, "acsutid": 7, "immunid": 7, "kidnei": [7, 18], "acsangd": 7, "acdiaud": 7, "acslead": 7, "aclea2d": 7, "toeamip": 7, "acscyfd": 7, "acgdisd": 7, "acbacgd": 7, "immunhd": 7, "immuitd": 7, "hepfa2d": 7, "hepfa3d": 7, "acslbwd": 7, "acshypp": 7, "acscarp": 7, "immunip": 7, "acsleap": 7, "transpp": 7, "diabt2d": 7, "dx_col_suffix": 7, "pr_col_suffix": 7, "prsys_col_suffix": 7, "drg": 7, "inpati": [7, 16], "group": [7, 16], "system": [7, 10, 15], "drgver": 7, "TO": [7, 16], "assign": [7, 10, 16], "dqtr": 7, "quarter": 7, "icd9": 7, "diag_cd_": 7, "prcdr_cd_": [7, 16], "prcdr_cd_sys_": [7, 16], "pqi": 7, "lst_keep_col": 7, "none": [7, 8, 11, 13, 14, 15, 16], "measur": [7, 8], "ip": [7, 8, 14, 16, 18, 19], "ad": [7, 16], "children": [7, 10, 16], "suffix": 7, "logger": [7, 11, 13, 14], "kept": 7, "gener": [8, 15, 16], "care": [8, 9, 16, 18, 19], "charlesworth": 8, "cj": 8, "meath": 8, "tha": 8, "schwartz": 8, "mcconnel": 8, "kj": 8, "commerci": 8, "insur": [8, 16], "popul": 8, "comprehens": [8, 16], "singl": 8, "state": [8, 11, 14, 15, 16], "analysi": 8, "jama": 8, "intern": 8, "med": 8, "publish": 8, "onlin": 8, "mai": 8, "31": 8, "2016": [8, 15, 16], "doi": 8, "10": [8, 9, 13, 14, 19], "1001": 8, "jamainternm": 8, "2086": 8, "pdf_date": 8, "dct_msr_spec": 8, "dict": [8, 9, 13, 14, 16], "dct_denom_spec": 8, "pd": [8, 9, 13, 14, 16], "condit": [8, 10, 13, 16, 18, 19], "date": [8, 9, 14, 16, 18], "elig": [8, 16], "info": [8, 15], "spec": 8, "dictionari": [8, 13, 14, 16], "denomin": 8, "pdf_denom_spec": 8, "pdf_measure_spec": 8, "max_data_root": 8, "lst_bene_id_filt": 8, "out_fold": 8, "index_col": [8, 9, 11, 16], "bene_msi": [8, 14, 16], "pattern": [8, 16], "save": [8, 15, 16], "them": [8, 10, 16], "parquet": [8, 15, 16], "folder": [8, 14, 16], "id": [8, 11, 13, 14, 15, 16], "where": [8, 16], "temporari": [8, 14, 16], "can": [8, 10, 11, 14, 19], "lst_condn": 8, "claims_fold": 8, "denom": 8, "three": 8, "version": [8, 10, 15, 16], "ar": [8, 9, 10, 13, 14, 15, 16, 19], "wa": [8, 11, 16], "present": [8, 10, 13], "ot": [8, 14, 16, 19], "flag": [8, 13, 14, 16, 18, 19], "locat": [8, 16, 18], "tupl": [8, 13, 14], "dct_measur": 8, "dct_denom": 8, "pdf_denom_spec_cod": 8, "pdf_measure_spec_cod": 8, "frame": [8, 11, 13], "dct_diag_cod": [8, 13], "diagnost": [8, 10, 16], "dct_proc_cod": [8, 13], "pdf_spec": 8, "specif": [8, 16], "msr": 8, "denot": [8, 13, 14, 16, 18, 19], "dct_excl_diag_cod": 8, "exclud": [8, 9, 14, 19], "dct_excl_proc_cod": 8, "normal": [8, 18], "so": [8, 11, 16], "thei": [8, 15], "lst_bene_msis_filt": 8, "given": 8, "filder": 8, "implement": [9, 10], "york": 9, "univers": 9, "nyu": 9, "emerg": 9, "depart": 9, "i": [9, 10, 11, 14, 15, 16, 18], "most": [9, 16], "wide": 9, "tool": [9, 11], "retrospect": 9, "assess": 9, "probabl": 9, "urgent": 9, "optim": 9, "treat": 9, "an": [9, 11, 16, 18], "administr": 9, "bill": [9, 16], "parikh": 9, "mijanovich": 9, "2000b": 9, "feldman": 9, "2010": 9, "perform": [9, 15], "classif": 9, "injuri": 9, "ac": 9, "033": 9, "390": 9, "391": 9, "037": 9, "045": 9, "345": 9, "481": 9, "483": 9, "485": 9, "486": 9, "462": 9, "463": 9, "465": 9, "011": 9, "012": 9, "013": 9, "014": 9, "015": 9, "016": 9, "017": 9, "018": 9, "491": 9, "492": 9, "494": 9, "496": 9, "493": 9, "681": 9, "682": 9, "683": 9, "686": 9, "590": 9, "260": 9, "261": 9, "262": 9, "521": 9, "522": 9, "523": 9, "525": 9, "528": 9, "382": 9, "428": 9, "413": 9, "614": 9, "7803": 9, "4721": 9, "2501": 9, "2502": 9, "2503": 9, "2508": 9, "2509": 9, "2500": 9, "2512": 9, "5589": 9, "5990": 9, "5999": 9, "2765": 9, "2680": 9, "2681": 9, "4660": 9, "4822": 9, "4823": 9, "4829": 9, "5184": 9, "4010": 9, "4019": 9, "4111": 9, "4118": 9, "3200": 9, "2801": 9, "2808": 9, "2809": 9, "7834": 9, "7070": 9, "7071": 9, "7078": 9, "7079": 9, "40201": 9, "40211": 9, "40291": 9, "40210": 9, "40290": 9, "40200": 9, "alcohol": 9, "291": 9, "303": [9, 19], "3050": 9, "3575": 9, "4255": 9, "5353": 9, "5710": 9, "5712": 9, "5713": 9, "7903": 9, "v704": 9, "v113": 9, "v791": 9, "76071": 9, "drug": [9, 16], "292": 9, "304": 9, "3052": 9, "3053": 9, "3054": 9, "3055": [9, 13, 14, 19], "3056": 9, "3057": 9, "3058": 9, "3059": 9, "3576": 9, "6483": 9, "6555": 9, "7795": 9, "76072": 9, "76073": 9, "76075": 9, "8": [9, 16], "e8": 9, "e90": 9, "e91": 9, "e92": 9, "e93": 9, "e94": 9, "e96": 9, "e97": 9, "e98": 9, "psych": 9, "290": 9, "293": 9, "294": 9, "295": [9, 19], "296": 9, "297": 9, "298": 9, "299": [9, 19], "300": [9, 15, 19], "301": [9, 19], "302": 9, "306": 9, "307": 9, "308": 9, "309": 9, "310": 9, "311": [9, 19], "312": [9, 19], "313": 9, "314": [9, 19], "315": 9, "316": 9, "317": 9, "318": 9, "319": 9, "e95": 9, "6484": 9, "v110": 9, "v111": 9, "v112": 9, "v114": 9, "v115": 9, "v116": 9, "v117": 9, "v118": 9, "v119": 9, "v710": 9, "v790": 9, "0049": 9, "0059": 9, "0085": 9, "0088": 9, "0340": 9, "0380": 9, "0381": 9, "0389": 9, "0542": 9, "5280": 9, "0579": 9, "05700": 9, "0740": 9, "0792": 9, "075": 9, "0799": 9, "07999": 9, "1104": 9, "1100": 9, "1108": 9, "1109": 9, "1110": 9, "1319": 9, "13101": 9, "25001": 9, "25000": 9, "25060": 9, "25080": 9, "25061": 9, "25081": 9, "25082": 9, "25083": 9, "2510": 9, "2740": 9, "2749": 9, "2761": 9, "2768": 9, "2767": 9, "28261": 9, "28260": 9, "28262": 9, "2910": 9, "29181": 9, "29532": 9, "29530": 9, "29590": 9, "2989": 9, "30001": 9, "30000": 9, "3009": 9, "30300": 9, "30301": 9, "30400": 9, "30390": 9, "30420": 9, "30561": 9, "30500": 9, "30560": 9, "30590": 9, "3061": 9, "30781": 9, "7840": 9, "3080": 9, "3089": 9, "3090": 9, "3469": 9, "34690": 9, "3559": 9, "3549": 9, "37200": 9, "0779": 9, "37203": 9, "37214": 9, "37230": 9, "38100": 9, "3814": 9, "38101": 9, "3829": 9, "38200": 9, "38110": 9, "40391": 9, "40493": 9, "41001": 9, "41091": 9, "41011": 9, "41021": 9, "41041": 9, "41071": 9, "41090": 9, "41400": 9, "4149": 9, "41401": 9, "4260": 9, "42613": 9, "42732": 9, "42731": 9, "4279": 9, "42789": 9, "43311": 9, "4359": 9, "43401": 9, "43411": 9, "43491": 9, "436": 9, "4549": 9, "4540": 9, "4553": 9, "4550": 9, "4554": 9, "4552": 9, "4556": 9, "4558": 9, "460": 9, "4610": 9, "4619": 9, "4620": 9, "4658": 9, "4659": 9, "4661": 9, "46619": 9, "46611": 9, "4730": 9, "4739": 9, "4770": 9, "4781": 9, "4779": 9, "4809": 9, "4821": 9, "4824": 9, "48283": 9, "48289": 9, "490": 9, "5210": 9, "5220": 9, "5225": 9, "5233": 9, "5231": 9, "5234": 9, "5239": 9, "5282": 9, "53081": 9, "5301": 9, "53100": 9, "5339": 9, "53140": 9, "53240": 9, "53390": 9, "53550": 9, "53500": 9, "5400": 9, "541": 9, "5401": 9, "5409": 9, "56081": 9, "5609": 9, "57400": 9, "57420": 9, "57410": 9, "5750": 9, "5770": 9, "5772": 9, "5771": 9, "5889": 9, "586": 9, "5921": 9, "5920": 9, "5929": 9, "5941": 9, "5950": 9, "5959": 9, "59780": 9, "0980": 9, "6089": 9, "6084": 9, "6142": 9, "6149": 9, "6143": 9, "6159": 9, "61610": 9, "6160": 9, "6168": 9, "6269": 9, "6268": 9, "6331": 9, "6339": 9, "6338": 9, "63491": 9, "63490": 9, "63492": 9, "64003": 9, "64000": 9, "64093": 9, "64183": 9, "64303": 9, "64193": 9, "64313": 9, "64390": 9, "64413": 9, "64410": 9, "6809": 9, "6806": 9, "68102": 9, "68100": 9, "68110": 9, "68111": 9, "6850": 9, "6851": 9, "6926": 9, "6918": 9, "6929": 9, "70890": 9, "7089": 9, "71590": 9, "71946": 9, "71596": 9, "71690": 9, "71696": 9, "71695": 9, "71697": 9, "71940": 9, "71941": 9, "71943": 9, "71949": 9, "71947": 9, "7210": 9, "7235": 9, "7213": 9, "7243": 9, "72190": 9, "7248": 9, "72210": 9, "7231": 9, "7241": 9, "7242": 9, "7245": 9, "72709": 9, "72705": 9, "73399": 9, "7329": 9, "78039": 9, "78031": 9, "78052": 9, "78050": 9, "7821": 9, "78601": 9, "78700": 9, "7870": 9, "78701": 9, "78702": 9, "78703": 9, "7880": 9, "78840": 9, "7884": 9, "78841": 9, "78842": 9, "78843": 9, "7887": 9, "7907": 9, "8024": 9, "8028": 9, "80700": 9, "80701": 9, "80702": 9, "80703": 9, "81201": 9, "81200": 9, "81209": 9, "81220": 9, "81240": 9, "81241": 9, "81305": 9, "81342": 9, "81341": 9, "81343": 9, "81383": 9, "81344": 9, "81381": 9, "81400": 9, "81600": 9, "81500": 9, "81601": 9, "81602": 9, "82101": 9, "82100": 9, "82380": 9, "82382": 9, "82381": 9, "8240": 9, "8242": 9, "8244": 9, "8246": 9, "8248": 9, "8250": 9, "82520": 9, "82525": 9, "8260": 9, "83101": 9, "83100": 9, "83104": 9, "83209": 9, "83200": 9, "8408": 9, "8409": 9, "8419": 9, "84210": 9, "84200": 9, "84213": 9, "84209": 9, "8441": 9, "8448": 9, "8449": 9, "8439": 9, "84509": 9, "84500": 9, "84510": 9, "8469": 9, "8460": 9, "8471": 9, "8472": 9, "8479": 9, "8709": 9, "8708": 9, "87200": 9, "87201": 9, "87261": 9, "38420": 9, "8728": 9, "8731": 9, "8730": 9, "87340": 9, "87320": 9, "87341": 9, "87342": 9, "87343": 9, "87344": 9, "87353": 9, "87360": 9, "87364": 9, "8738": 9, "8744": 9, "8748": 9, "8760": 9, "8750": 9, "8770": 9, "88003": 9, "88000": 9, "88100": 9, "88110": 9, "88120": 9, "8820": 9, "88102": 9, "8821": 9, "8822": 9, "8831": 9, "8830": 9, "8832": 9, "8840": 9, "8910": 9, "8900": 9, "8921": 9, "8920": 9, "8930": 9, "9104": 9, "9105": 9, "9110": 9, "9100": 9, "9114": 9, "9130": 9, "9134": 9, "9135": 9, "9140": 9, "9141": 9, "9150": 9, "9160": 9, "9164": 9, "9175": 9, "9165": 9, "9170": 9, "9180": 9, "9181": 9, "9189": 9, "9190": 9, "9195": 9, "9194": 9, "9196": 9, "9156": 9, "9212": 9, "920": 9, "9213": 9, "9219": 9, "9222": 9, "9221": 9, "9223": 9, "92232": 9, "92231": 9, "92310": 9, "92300": 9, "92311": 9, "92320": 9, "9233": 9, "9238": 9, "9239": 9, "92401": 9, "92400": 9, "92411": 9, "92420": 9, "92421": 9, "9243": 9, "9245": 9, "9330": 9, "933": 9, "9331": 9, "9351": 9, "938": 9, "936": 9, "9404": 9, "9409": 9, "94321": 9, "94120": 9, "94421": 9, "94500": 9, "94522": 9, "94524": 9, "94420": 9, "94526": 9, "9462": 9, "9490": 9, "9592": 9, "9593": 9, "9630": 9, "9654": 9, "9690": 9, "9694": 9, "9691": 9, "9700": 9, "99810": 9, "9981": 9, "99811": 9, "99812": 9, "99813": 9, "9985": 9, "99883": 9, "99859": 9, "99889": 9, "v589": 9, "v5889": 9, "v709": 9, "v708": 9, "prindx": 9, "nonemerg": 9, "emergpc": 9, "emedpa": 9, "emednpa": 9, "0030": 9, "000000": 9, "371429": 9, "457143": 9, "171429": 9, "2": [9, 16], "0090": 9, "3": [9, 10, 16, 19], "01190": 9, "03400": 9, "654": 9, "v718": 9, "655": 9, "v719": 9, "656": 9, "v72": 9, "657": 9, "v741": 9, "658": 9, "v802": 9, "659": 9, "row": [9, 16], "dx_code": 9, "float": 9, "did": [9, 16], "meet": [9, 15], "ani": [9, 14, 16, 18], "mental": [9, 10, 19], "health": [9, 10, 16, 19], "peds_acs_": 9, "ambuilatori": 9, "sensit": 9, "ne": 9, "non": [9, 10, 11, 13, 15, 16], "epct": 9, "primari": 9, "treatabl": 9, "edcnpa": 9, "need": 9, "avoid": [9, 16], "edcnnpa": 9, "Not": 9, "merg": [9, 15], "eddx": 9, "probbol": 9, "attach": 9, "ed_categori": 9, "category_cod": 9, "check": [9, 16], "criteria": [9, 15, 16], "target": 9, "11": [9, 16], "181": 9, "182": 9, "183": 9, "322": 9, "comment": 9, "updat": [9, 11], "delet": 9, "starts_with": 9, "042": 9, "043": 9, "044": 9, "nan": [9, 16], "0781": 9, "2780": 9, "4151": 9, "179": 9, "washington": 9, "dc": 9, "doc": 9, "180": 9, "5751": 9, "6860": 9, "7807": 9, "12": [9, 16], "7890": 9, "13": 9, "850": 9, "14": 9, "8540": 9, "854": 9, "8541": 9, "9898": 9, "16": 9, "9955": 9, "17": [9, 16], "9970": 9, "19": 9, "62": 9, "684": 9, "6869": 9, "recod": 9, "date_col": 9, "dxgroup": 9, "being": 9, "pass": [9, 11], "set": [9, 14, 15, 16, 19], "studi": [9, 14, 18, 19], "complex": 10, "tamara": 10, "d": [10, 16], "simon": 10, "dorothi": 10, "lyon": 10, "peter": 10, "woodcox": 10, "2014": [10, 15], "identifi": [10, 15, 16, 18, 19], "distinguish": 10, "neither": 10, "nor": 10, "healthi": 10, "design": [10, 18], "whether": [10, 11, 18], "child": [10, 16], "icd": [10, 13, 19], "consid": [10, 16], "malign": 10, "progress": 10, "multipl": [10, 14, 15, 16, 18], "bodi": 10, "involv": 10, "interest": 10, "natur": 10, "seattl": 10, "research": [10, 15], "institut": 10, "subset": 10, "defin": [10, 14], "outlin": 10, "ill": 10, "disabl": [10, 16], "payment": [10, 16], "diag_cd_lst_col": 10, "lst_diag_cd_raw": 10, "definit": 10, "less": [10, 15, 19], "conserv": 10, "cond_less": 10, "more": [10, 15, 16], "than": [10, 16, 19], "one": [10, 15, 16], "onli": [10, 16, 18], "cond_mor": 10, "must": [10, 11, 16], "cardiac": [10, 18], "craniofaci": 10, "cranio": 10, "dermatolog": 10, "derm": 10, "endocrinolog": 10, "endo": 10, "gastrointestin": 10, "gastro": 10, "genet": 10, "genitourinari": 10, "genito": 10, "hematolog": 10, "hemato": 10, "immunolog": 10, "immuno": 10, "mh": 10, "metabol": 10, "metab": 10, "musculoskelet": 10, "musculo": 10, "neurolog": 10, "neuro": 10, "pulmonari": 10, "respiratori": 10, "pulresp": 10, "renal": 10, "ophthalmolog": 10, "opthal": 10, "otolog": 10, "otol": 10, "otolaryngolog": 10, "otolar": 10, "lst_col": 11, "convert": [11, 16], "specifi": 11, "datetim": [11, 16], "param": [11, 15], "pandas_df": 11, "rtype": 11, "lst_new_nam": 11, "pq_engin": [11, 14, 15, 16], "output_filenam": 11, "pq_locat": 11, "csv_locat": 11, "lst_datetime_col": 11, "is_dask": 11, "bool": [11, 13, 14, 16], "n_row": 11, "do_csv": 11, "df_schema": 11, "rewrit": 11, "do_parquet": 11, "time_col": 11, "start_date_col": 11, "threshold": 11, "multiidx_df_column": 11, "combine_level": 11, "df_temp": 11, "to_str": 11, "toggl": 11, "string": [11, 15], "datatim": 11, "inplac": 11, "otherwis": [11, 18, 19], "root": [11, 14], "bool_": 11, "messag": 11, "verbos": 11, "replac": 11, "assert": 11, "you": 11, "want": 11, "fail": 11, "statement": 11, "log": 11, "log_fil": 11, "20": 11, "pdf": [11, 15], "lst_state": 11, "lst_metric": 11, "lst_count_metr": 11, "output_fnam": 11, "pop_col_nam": 11, "gt_50pc_hrsa_fqhc": 11, "dct_label": 11, "state_col_nam": 11, "state_cd": 11, "confusion_matrix": 11, "cramer": 11, "v": [11, 16], "statist": [11, 15], "associ": 11, "correct": 11, "bergsma": 11, "wicher": 11, "journal": 11, "korean": 11, "societi": 11, "42": [11, 16], "2013": [11, 16], "323": 11, "328": 11, "pdf_includ": 11, "lst_st": 11, "pdf_dataset": 11, "lst_categorical_metr": 11, "lst_numeric_col_to_binar": 11, "lst_covar": 11, "lst_hist_covar": 11, "cut_outli": 11, "outputfnam": 11, "pdf_x": 11, "script": [11, 16], "show": 11, "exampl": [11, 14], "request": [11, 14, 15, 16], "usp": [11, 15], "address": [11, 15], "In": [11, 16], "order": 11, "first": [11, 16], "regist": 11, "your": 11, "userid": 11, "environ": 11, "usps_userid": 11, "For": 11, "see": 11, "here": 11, "http": [11, 15, 16], "www": [11, 15, 16], "com": 11, "busi": 11, "web": [11, 15], "htm": 11, "_": [11, 14], "street": [11, 15], "citi": [11, 15], "suit": 11, "zip5": 11, "zip4": 11, "186unive5985": 11, "verifi": 11, "represent": 11, "unit": 11, "postal": 11, "ship": 11, "send": 11, "xml": 11, "respons": 11, "product": [11, 16], "shippingapi": 11, "dll": 11, "raw_xml": 11, "proper": 11, "intend": 11, "xpath": 11, "text": 11, "element": 11, "found": 11, "flag_diagnoses_and_procedur": [12, 13], "get_patient_ids_with_condit": [12, 13], "flag_prescript": [12, 13], "apply_range_filt": [12, 14], "export_cohort_dataset": [12, 14], "extract_cohort": [12, 14], "filter_claim_fil": [12, 14], "df_claim": [13, 18, 19], "lst_claim_diag_col": 13, "condition_nam": [13, 14], "incl": [13, 14], "excl": [13, 14], "eg": [13, 14, 16], "oud_nqf": [13, 14], "3040": [13, 14, 19], "procedure_nam": [13, 14], "procedure_system_cod": [13, 14], "methadon": [13, 19], "hz81zzz": [13, 14], "hz84zzz": [13, 14], "hz85zzz": [13, 14], "hz86zzz": [13, 14], "hz91zzz": [13, 14], "hz94zzz": [13, 14], "hz95zzz": [13, 14], "hz96zzz": [13, 14], "split": [13, 14], "dd": [13, 14, 16, 18, 19], "option": 13, "rais": [13, 14], "valueerror": [13, 14], "alphanumer": [13, 15, 16], "dct_claim": 13, "provid": [13, 15, 16], "keyword": [13, 16], "argument": [13, 16], "file_typ": 13, "indexerror": 13, "dataset": [13, 14, 15, 16], "do": 13, "have": [13, 14, 15, 16], "same": [13, 15, 16], "dct_ndc_code": 13, "ignore_missing_days_suppli": 13, "buprenorphin": [13, 19], "00378451905": 13, "00378451993": 13, "00378617005": 13, "00378617077": 13, "alwai": 13, "miss": [13, 14, 16], "neg": 13, "dai": [13, 16, 18], "suppli": 13, "extract": 14, "cohort": [14, 18], "tpl_rang": 14, "filter_nam": 14, "col_nam": 14, "data_typ": 14, "numer": 14, "rang": [14, 15, 16], "upper": [14, 16], "bound": 14, "range_": 14, "datatyp": 14, "current": [14, 16, 18], "support": [14, 16, 18], "__file__": 14, "pdf_cohort": 14, "lst_types_to_export": 14, "dct_export_filt": 14, "dct_data_path": 14, "clean_export": 14, "preprocess_export": 14, "export_format": 14, "csv": [14, 15, 16], "correspond": [14, 16], "inclus": 14, "includ": 14, "addit": [14, 15], "raw": [14, 15], "select": 14, "while": 14, "claim_type_1": 14, "start": [14, 15, 16], "end": [14, 16], "excl_": 14, "claim_type_2": 14, "begin": [14, 16], "posit": [14, 16], "exclus": [14, 16], "just": 14, "restrict": [14, 16], "result": [14, 16], "range_numeric_age_prncpl_proc": 14, "18": [14, 16], "missing_dob": 14, "excl_femal": 14, "range_numeric_age_srvc_bgn": 14, "also": 14, "dob": 14, "those": 14, "whose": [14, 16], "between": [14, 15, 16], "both": 14, "princip": [14, 16], "source_root": 14, "path": [14, 16], "export_fold": [14, 15], "filenotfounderror": 14, "when": [14, 15, 16, 18, 19], "import": 14, "doe": [14, 16], "exist": [14, 16], "lst_year": [14, 15], "dct_diag_proc_cod": 14, "dct_filter": 14, "pyarrow": [14, 15, 16], "which": [14, 15, 16], "diag_cod": 14, "proc_cod": 14, "methadone_7": 14, "dct_claim_filt": 14, "tmp_folder": [14, 16], "subtyp": [14, 16], "union": 14, "cach": [14, 16], "mid": 14, "process": [14, 16], "larg": [14, 16], "cluster": [14, 16], "crash": [14, 16], "task": 14, "graph": 14, "too": 14, "handl": 14, "intermedi": [14, 16], "stage": 14, "requir": 14, "fastparquet": 15, "oscar": 15, "pickl": 15, "start_year": 15, "lookup": 15, "cross": 15, "walk": 15, "seen": 15, "till": 15, "remov": [15, 16], "placenam": 15, "line": 15, "concaten": 15, "occup": 15, "number": [15, 16], "hclinic_nam": 15, "combin": 15, "without": [15, 16], "lead": 15, "zero": 15, "download": [15, 16], "archiv": 15, "avail": 15, "org": [15, 16], "20141120072219": 15, "gov": [15, 16], "hclinic": 15, "report": 15, "2015": 15, "20151230005431": 15, "20161228145429": 15, "20171220152135": 15, "2018": 15, "20181226170727": 15, "2019": 15, "20191226132614": 15, "fqhc14": 15, "2020": [15, 19], "20201225141117": 15, "2021": [15, 19], "cost": 15, "224": 15, "form": 15, "levenshtein": 15, "distanc": [15, 16], "similar": 15, "equal": [15, 16, 19], "match": 15, "fqhc_crosswalk": 15, "nppe": 15, "some": [15, 16], "least": 15, "60": 15, "df_npi_provid": 15, "lstdct_tax": 15, "dct_request_param": 15, "make": 15, "call": 15, "compon": [15, 16], "belong": [15, 16], "strip": 15, "up": [15, 16], "map": 15, "flat": 15, "known": 15, "taxonomi": 15, "engin": 15, "taxonomy_cod": 15, "two": 15, "charact": [15, 16], "special": 15, "extra": 15, "space": [15, 16], "hyphen": 15, "flatten": 15, "pars": 15, "door": 15, "less_constrain": 15, "chunk_siz": 15, "perfect": 15, "strict": 15, "respect": 15, "relax": 15, "ccn": 15, "bhmisid": 15, "lst_perfect_npi": 15, "lst_fuzzy_npi": 15, "bhcmisid": 15, "were": [15, 16], "statu": [15, 16, 18], "concat": 15, "pcsa": [15, 16], "ruca": [15, 16], "wrap": 16, "routin": 16, "cc": 16, "data_root": 16, "lst_condit": 16, "across": 16, "payer": 16, "indidc": 16, "ftype": 16, "parent": 16, "integ": [16, 18, 19], "el_sex_cd": 16, "undefin": 16, "u": 16, "take": 16, "repartit": 16, "step": 16, "lengthi": 16, "speed": 16, "amount": 16, "pymt_amt": 16, "mdcd_pymt_amt": 16, "tp_pymt_amt": 16, "case": 16, "dest_fold": 16, "output_format": 16, "destin": 16, "detect": [16, 18], "ed_cpt": 16, "99281": 16, "99285": 16, "01": 16, "ed_ub92": 16, "revenu": 16, "center": [16, 19], "0450": 16, "0459": 16, "0981": 16, "ub_92_rev_cd_gp_": 16, "23": 16, "ed_to": 16, "outpati": [16, 19], "max_to": 16, "ed_po": 16, "plc_of_srvc_cd": 16, "ed_us": 16, "any_": 16, "refer": [16, 19], "beneficiari": 16, "surgeon": 16, "bulletin": 16, "fac": 16, "02": 16, "admiss": 16, "resdac": 16, "resconnect": 16, "articl": 16, "144": 16, "arg": 16, "kwarg": 16, "instanc": 16, "dest_path_and_fnam": 16, "overwrit": 16, "safe": 16, "basic": 16, "birth_year": 16, "birth_month": 16, "birth_dai": 16, "compoment": 16, "el_dob": 16, "birth_dat": 16, "death": 16, "el_dod": 16, "mdcr_dod": 16, "empti": 16, "fall": 16, "befor": [16, 18], "age_decim": 16, "decim": 16, "age_dai": 16, "115": 16, "imput": 16, "admsn_dat": 16, "durat": 16, "admsn_dt": 16, "srvc_bgn_date": 16, "srvc_bgn_dt": 16, "srvc_end_dat": 16, "srvc_end_dt": 16, "prncpl_proc_dat": 16, "prncpl_prcdr_dt": 16, "missing_admsn_d": 16, "missing_prncpl_proc_d": 16, "flag_admsn_miss": 16, "lo": 16, "ageday_admsn": 16, "age_admsn": 16, "age_prncpl_proc": 16, "age_day_prncpl_proc": 16, "diff": 16, "age_day_srvc_bgn": 16, "age_srvc_bgn": 16, "date_of_death": 16, "medicare_date_of_death": 16, "run": 16, "common": [16, 19], "duplic": 16, "overlap": 16, "sever": 16, "msis_id": 16, "largest": 16, "retain": 16, "flag_ip_undup": 16, "flag_ip_dup_drop": 16, "drop": 16, "flag_ip_overlap_drop": 16, "anoth": 16, "ip_incl": 16, "mark": 16, "dental": 16, "transport": 16, "ed_incl": 16, "ot_incl": 16, "flag_drop": 16, "null": 16, "dental_to": 16, "dental_prcdr": 16, "e": 16, "m": 16, "em": 16, "99201": 16, "99215": 16, "99301": 16, "99350": 16, "transport_to": 16, "26": 16, "transport_po": 16, "41": 16, "rural_method": 16, "max_elg_cd_mo_": 16, "month": 16, "max_elg_cd_mo": 16, "00": 16, "NOT": 16, "99": 16, "unknown": 16, "inelig": 16, "elg_mon_": 16, "total_elg_mon": 16, "No": 16, "elg_full_year": 16, "elg_over_9mon": 16, "elg_over_6mon": 16, "elg_cont_6mon": 16, "continu": 16, "mas_elg_chang": 16, "had": 16, "ma": 16, "membership": 16, "mas_assign": 16, "boe_assign": 16, "boe": 16, "dominant_boe_group": 16, "held": 16, "boe_elg_chang": 16, "child_boe_elg_chang": 16, "elg_chang": 16, "eligibility_ag": 16, "anytim": 16, "eligibility_child": 16, "max_gap": 16, "maximum": 16, "gap": 16, "enrol": 16, "max_cont_enrol": 16, "excl_duplicated_bene_id": 16, "repeat": 16, "dual": 16, "el_mdcr_dual_ann": 16, "2007": 16, "2009": 16, "2011": 16, "individu": 16, "variou": 16, "el_rstrct_bnft_flg_": 16, "full": [16, 18], "scope": 16, "FOR": 16, "THE": 16, "entitl": 16, "OF": 16, "benefit": 16, "alien": 16, "BUT": 16, "ON": 16, "pregnanc": [16, 18], "substanc": 16, "abus": 16, "needi": 16, "famili": 16, "plan": 16, "altern": 16, "benchmark": 16, "equival": 16, "coverag": 16, "monei": 16, "person": 16, "rebalanc": 16, "demonstr": 16, "A": 16, "psychiatr": 16, "residenti": 16, "treatment": [16, 19], "b": 16, "opportun": 16, "account": 16, "c": 16, "chip": 16, "supplement": 16, "employ": 16, "sponsor": 16, "w": 16, "premium": 16, "assist": 16, "nj": 16, "vt": 16, "ok": 16, "y": 16, "z": 16, "pai": 16, "sd": 16, "any_restricted_benefit_month": 16, "atleast": 16, "restricted_benefit_month": 16, "restricted_benefit": 16, "method": 16, "classifi": 16, "rural": [16, 18], "basi": 16, "rucc": 16, "resid": 16, "fip": 16, "resident_state_cd": 16, "ruca_cod": 16, "rucc_cod": 16, "er": 16, "usda": 16, "webdoc": 16, "datafil": 16, "53241": 16, "ruca2010zipcod": 16, "xlsx": 16, "8673": 16, "rest": 16, "urban": 16, "per": 16, "ncbi": 16, "nlm": 16, "nih": 16, "pmc": 16, "pmc6286055": 16, "sd1": 16, "53251": 16, "ruralurbancodes2013": 16, "xl": 16, "2372": 16, "zcta": 16, "udsmapp": 16, "istanc": 16, "centroid": 16, "nber": 16, "gaz": 16, "zcta5": 16, "gaz2016zcta5centroid": 16, "tanf": 16, "financi": 16, "pregnant": 16, "women": 16, "depend": 16, "help": 16, "food": 16, "shelter": 16, "expens": 16, "via": 16, "el_tanf_cash_flg": 16, "receiv": 16, "co": [16, 19], "either": 16, "usag": 16, "header": [16, 19], "white": 16, "pad": 16, "left": 16, "length": 16, "keep": 16, "recent": 16, "ip_vrsn": 16, "lt_vrsn": 16, "ot_vrsn": 16, "rx_vrsn": 16, "da_run_id": 16, "clm_id": 16, "disord": 16, "clm_type_cd": 16, "ff": 16, "expans": 16, "expand": 16, "encount": 16, "record": 16, "titl": 16, "xxi": 16, "f_subtyp": 16, "death_dt": 16, "prcdr_cd_dt_1": 16, "ffs_or_encounter_claim": 16, "excl_missing_dob": 16, "excl_missing_admsn_d": 16, "excl_missing_prncpl_proc_d": 16, "lt": [16, 18], "excl_missing_srvc_bgn_d": 16, "sex_cd": 16, "mainten": 16, "boe_chip_month": 16, "boe_aged_month": 16, "boe_blind_disabled_month": 16, "blind": 16, "boe_child_month": 16, "boe_adults_month": 16, "boe_breast_and_cervical_cancer_month": 16, "breast": 16, "cervic": 16, "cancer": 16, "act": 16, "2000": 16, "boe_child_of_unemployed_month": 16, "unemploi": 16, "boe_unemployed_month": 16, "boe_foster_care_children_month": 16, "foster": 16, "boe_unknown_month": 16, "uknown": 16, "mas_chip_month": 16, "mas_cash_sec_1931_month": 16, "cash": 16, "under": 16, "section": 16, "1931": 16, "mas_medically_needy_month": 16, "mas_poverty_month": 16, "poverti": 16, "mas_other_month": 16, "mas_demonstration_month": 16, "1115": 16, "mas_unknown_month": 16, "max_mas_typ": 16, "top": 16, "max_boe_typ": 16, "dual_elgbl_cd": 16, "partial": 16, "total": 16, "sequenc": 16, "rstrctd_bnfts_cd_xx": 16, "assum": 16, "reason": 16, "g": 16, "upon": 16, "enact": 16, "deficit": 16, "reduct": 16, "2005": 16, "np": 16, "cole": 16, "megan": 16, "tanf_cash_cd": 16, "pharmaci": 16, "flag_religious_npi": [17, 18], "flag_transf": [17, 18], "flag_chronic_condit": [17, 18], "calculate_concept": [17, 18], "flag_abnormal_pregn": [17, 18], "flag_deliveri": [17, 18], "flag_delivery_mod": [17, 18], "flag_multiple_birth": [17, 18], "flag_prenat": [17, 18], "flag_preterm": [17, 18], "flag_smm_ev": [17, 18], "flag_care_set": [17, 19], "flag_cooccurring_mental_health_claim": [17, 19], "flag_cooccurring_sud_claim": [17, 19], "flag_proc_behavioral_health_trtmt": [17, 19], "flag_proc_buprenorphin": [17, 19], "flag_proc_buprenorphine_naloxon": [17, 19], "flag_proc_injectable_naltrexon": [17, 19], "flag_proc_methadon": [17, 19], "flag_rx_benzos_opioid": [17, 19], "flag_rx_buprenorphin": [17, 19], "flag_rx_buprenorphine_naloxon": [17, 19], "flag_rx_methadon": [17, 19], "flag_rx_oral_naltrexon": [17, 19], "repres": [18, 19], "ob": 18, "gyn": 18, "catholic_npi": 18, "cathol": 18, "religious_npi": 18, "religi": 18, "affili": 18, "secular_npi": 18, "regliou": 18, "rural_npi": 18, "discharg": 18, "transfer": 18, "presenc": [18, 19], "cc_file": 18, "ckd_combin": 18, "diab_combin": 18, "hypten_combin": 18, "diseas": 18, "depr_combin": 18, "depress": 18, "copd_combin": 18, "toba_combin": 18, "tobacco": [18, 19], "estim": 18, "concept": 18, "deliveri": 18, "75": 18, "abort": 18, "255": 18, "230": 18, "pre": 18, "natal": 18, "conception_d": 18, "viz": 18, "hosp_abnormal_pregn": 18, "hosp_birth": 18, "hosp_preterm": 18, "hosp_prenat": 18, "ectop": 18, "molar": 18, "abnorm": 18, "spontan": 18, "induc": 18, "df_ip_claim": 18, "stillbirth": 18, "live": 18, "still": 18, "mode": 18, "hosp_vag_dlvri": 18, "vagin": 18, "hosp_csrn_dlvri": 18, "caesarian": 18, "hosp_multiple_birth": 18, "birt": 18, "hdeliveri": 18, "prenat": 18, "preterm": 18, "index_admsn_date_col": 18, "index_admsn_d": 18, "smm": 18, "hospitalizt": 18, "hosp_smm_myo": 18, "hosp_smm_aneurysm": 18, "hosp_smm_ren": 18, "hosp_smm_respiratori": 18, "hosp_smm_embol": 18, "hosp_smm_cardiac": 18, "hosp_smm_coagul": 18, "hosp_smm_eclampsia": 18, "hosp_smm_heart": 18, "hosp_smm_cerebrovascular": 18, "hosp_smm_edema": 18, "hosp_smm_anesthesia": 18, "hosp_smm_sepsi": 18, "hosp_smm_shock": 18, "hosp_smm_sickl": 18, "hosp_smm_thrombot": 18, "hosp_smm_cardiac_rhythm": 18, "hosp_smm_transfus": 18, "hosp_smm_hysterectomi": 18, "hosp_smm_tracheostomi": 18, "hosp_smm_ventil": 18, "hosp_smm": 18, "hosp_smm_no_blood": 18, "transfus": 18, "sole": 18, "caus": 18, "physician": 19, "offic": 19, "behavior": 19, "gertner": 19, "fara": 19, "2022": 19, "occur": 19, "3071": 19, "3075": 19, "30981": 19, "f20": 19, "f29": 19, "f30": 19, "f39": 19, "f40": 19, "f42": 19, "f431": 19, "f50": 19, "f60": 19, "f9091": 19, "modrn": 19, "diag_cooccurring_mental_health": 19, "sud": 19, "305": 19, "3047": 19, "3051": 19, "remiss": 19, "5th": 19, "digit": 19, "f10": 19, "f19": 19, "f11": 19, "f17": 19, "f55": 19, "o355": 19, "o9931": 19, "o9932": 19, "diag_cooccurring_sud": 19, "proc_behavioral_health_trtmt": 19, "proc_buprenorphin": 19, "naloxon": 19, "proc_buprenorphine_naloxon": 19, "inject": 19, "naltrexon": 19, "proc_injectable_naltrexon": 19, "proc_methadon": 19, "df_rx_claim": 19, "benzodiazepin": 19, "opioid": 19, "rx_benzodiazepin": 19, "rx_opioid": 19, "rx_buprenorphin": 19, "rx_buprenorphine_naloxon": 19, "rx_methadone_le_30mg": 19, "dosag": 19, "30": 19, "mg": 19, "rx_methadone_gt_30mg": 19, "greater": 19, "oral": 19, "rx_oral_naltrexon": 19}, "objects": {"": [[1, 0, 0, "-", "medicaid_utils"]], "medicaid_utils": [[2, 0, 0, "-", "adapted_algorithms"], [11, 0, 0, "-", "common_utils"], [12, 0, 0, "-", "filters"], [15, 0, 0, "-", "other_datasets"], [16, 0, 0, "-", "preprocessing"], [17, 0, 0, "-", "topics"]], "medicaid_utils.adapted_algorithms": [[3, 0, 0, "-", "py_betos"], [4, 0, 0, "-", "py_cdpsmrx"], [5, 0, 0, "-", "py_ed_pqi"], [6, 0, 0, "-", "py_elixhauser"], [7, 0, 0, "-", "py_ip_pqi"], [8, 0, 0, "-", "py_low_value_care"], [9, 0, 0, "-", "py_nyu_billings"], [10, 0, 0, "-", "py_pmca"]], "medicaid_utils.adapted_algorithms.py_betos": [[3, 0, 0, "-", "betos_proc_codes"]], "medicaid_utils.adapted_algorithms.py_betos.betos_proc_codes": [[3, 1, 1, "", "BetosProcCodes"], [3, 4, 1, "", "assign_betos_cat"]], "medicaid_utils.adapted_algorithms.py_betos.betos_proc_codes.BetosProcCodes": [[3, 2, 1, "", "data_folder"], [3, 2, 1, "", "filename"], [3, 3, 1, "", "get_betos_cat"], [3, 3, 1, "", "get_betos_cpt_crosswalk"], [3, 2, 1, "", "package_folder"]], "medicaid_utils.adapted_algorithms.py_cdpsmrx": [[4, 0, 0, "-", "cdps_rx_risk_adjustment"]], "medicaid_utils.adapted_algorithms.py_cdpsmrx.cdps_rx_risk_adjustment": [[4, 1, 1, "", "CdpsRxRiskAdjustment"], [4, 4, 1, "", "cdps_rx_risk_adjust"]], "medicaid_utils.adapted_algorithms.py_cdpsmrx.cdps_rx_risk_adjustment.CdpsRxRiskAdjustment": [[4, 3, 1, "", "add_age_and_gender_cols"], [4, 3, 1, "", "add_cdps_category_cols"], [4, 3, 1, "", "add_mrx_cat_cols"], [4, 3, 1, "", "calculate_risk"], [4, 3, 1, "", "combine_cdps_mrx_hierarchies"], [4, 2, 1, "", "data_folder"], [4, 2, 1, "", "filename"], [4, 2, 1, "", "package_folder"]], "medicaid_utils.adapted_algorithms.py_ed_pqi": [[5, 0, 0, "-", "ed_pqi"]], "medicaid_utils.adapted_algorithms.py_ed_pqi.ed_pqi": [[5, 1, 1, "", "EDPreventionQualityIndicators"], [5, 4, 1, "", "fix_index"], [5, 4, 1, "", "get_ed_pqis"]], "medicaid_utils.adapted_algorithms.py_ed_pqi.ed_pqi.EDPreventionQualityIndicators": [[5, 2, 1, "", "data_folder"], [5, 2, 1, "", "filename"], [5, 3, 1, "", "flag_potentially_preventable_ed_visits"], [5, 3, 1, "", "get_patient_exclusion_indicators"], [5, 2, 1, "", "package_folder"]], "medicaid_utils.adapted_algorithms.py_elixhauser": [[6, 0, 0, "-", "elixhauser_comorbidity"]], "medicaid_utils.adapted_algorithms.py_elixhauser.elixhauser_comorbidity": [[6, 1, 1, "", "ElixhauserScoring"], [6, 4, 1, "", "score"]], "medicaid_utils.adapted_algorithms.py_elixhauser.elixhauser_comorbidity.ElixhauserScoring": [[6, 3, 1, "", "calculate_final_score"], [6, 2, 1, "", "data_folder"], [6, 2, 1, "", "filename"], [6, 3, 1, "", "flag_comorbidities"], [6, 2, 1, "", "package_folder"]], "medicaid_utils.adapted_algorithms.py_ip_pqi": [[7, 0, 0, "-", "data_generation"], [7, 0, 0, "-", "prevention_quality_indicators"]], "medicaid_utils.adapted_algorithms.py_ip_pqi.data_generation": [[7, 4, 1, "", "generate_dxgrp_file"], [7, 4, 1, "", "generate_prgrp_file"]], "medicaid_utils.adapted_algorithms.py_ip_pqi.prevention_quality_indicators": [[7, 1, 1, "", "PreventionQualityIndicators"], [7, 4, 1, "", "pqirecode"]], "medicaid_utils.adapted_algorithms.py_ip_pqi.prevention_quality_indicators.PreventionQualityIndicators": [[7, 3, 1, "", "add_acsc_cat_cols"], [7, 3, 1, "", "add_area_level_indicator_cols"], [7, 3, 1, "", "add_drg_cols"], [7, 3, 1, "", "add_neonate_newborn_cols"], [7, 3, 1, "", "add_pr_dxgrp_cols"], [7, 2, 1, "", "data_folder"], [7, 2, 1, "", "filename"], [7, 2, 1, "", "logger_name"], [7, 2, 1, "", "package_folder"], [7, 3, 1, "", "prepare_cols"]], "medicaid_utils.adapted_algorithms.py_low_value_care": [[8, 0, 0, "-", "low_value_care"]], "medicaid_utils.adapted_algorithms.py_low_value_care.low_value_care": [[8, 1, 1, "", "LowValueCare"], [8, 4, 1, "", "construct_low_value_care_measures"]], "medicaid_utils.adapted_algorithms.py_low_value_care.low_value_care.LowValueCare": [[8, 3, 1, "", "construct_low_value_care_measures"], [8, 2, 1, "", "data_folder"], [8, 2, 1, "", "filename"], [8, 3, 1, "", "generate_condn_and_eligibility_indicators"], [8, 3, 1, "", "get_dates"], [8, 3, 1, "", "get_dates_with_eligibility"], [8, 3, 1, "", "get_denom_measure_spec"], [8, 3, 1, "", "get_diag_proc_codes"], [8, 3, 1, "", "get_diag_proc_specs"], [8, 3, 1, "", "normalize_condition_names"], [8, 2, 1, "", "package_folder"]], "medicaid_utils.adapted_algorithms.py_nyu_billings": [[9, 0, 0, "-", "billings_ed"]], "medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed": [[9, 1, 1, "", "BillingsED"], [9, 4, 1, "", "get_nyu_ed_proba"]], "medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.BillingsED": [[9, 2, 1, "", "cat"], [9, 2, 1, "", "data_folder"], [9, 2, 1, "", "dct_category_dx_codes"], [9, 2, 1, "", "dct_recode_non_startswith"], [9, 2, 1, "", "df_eddxs"], [9, 2, 1, "", "filename"], [9, 3, 1, "", "get_nyu_ed_categories"], [9, 3, 1, "", "get_nyu_ed_proba_for_dx_code"], [9, 3, 1, "", "get_special_categories"], [9, 3, 1, "", "is_peds_acsed"], [9, 2, 1, "", "logger_name"], [9, 2, 1, "", "lst_special_ed_categories"], [9, 2, 1, "", "package_folder"], [9, 2, 1, "", "pdf_nonstartswith_recode"], [9, 2, 1, "", "pdf_recode"], [9, 2, 1, "", "pdf_startswith_recode"], [9, 3, 1, "", "recode_diag_code"]], "medicaid_utils.adapted_algorithms.py_pmca": [[10, 0, 0, "-", "pmca"]], "medicaid_utils.adapted_algorithms.py_pmca.pmca": [[10, 1, 1, "", "PediatricMedicalComplexity"], [10, 4, 1, "", "pmca_chronic_conditions"]], "medicaid_utils.adapted_algorithms.py_pmca.pmca.PediatricMedicalComplexity": [[10, 3, 1, "", "create_pmca_condition_counts"], [10, 2, 1, "", "data_folder"], [10, 2, 1, "", "filename"], [10, 3, 1, "", "get_pmca_chronic_condition_categories"], [10, 2, 1, "", "package_folder"]], "medicaid_utils.common_utils": [[11, 0, 0, "-", "dataframe_utils"], [11, 0, 0, "-", "links"], [11, 0, 0, "-", "recipes"], [11, 0, 0, "-", "stats_utils"], [11, 0, 0, "-", "usps_address"]], "medicaid_utils.common_utils.dataframe_utils": [[11, 4, 1, "", "convert_ddcols_to_datetime"], [11, 4, 1, "", "copy_ddcols"], [11, 4, 1, "", "export"], [11, 4, 1, "", "fix_index"], [11, 4, 1, "", "get_first_day_gap"], [11, 4, 1, "", "get_reduced_column_names"], [11, 4, 1, "", "prepare_dtypes_for_csv"], [11, 4, 1, "", "safe_convert_int_to_str"], [11, 4, 1, "", "sas_to_pandas"], [11, 4, 1, "", "toggle_datetime_string"]], "medicaid_utils.common_utils.links": [[11, 4, 1, "", "get_max_parquet_loc"], [11, 4, 1, "", "get_taf_parquet_loc"]], "medicaid_utils.common_utils.recipes": [[11, 4, 1, "", "convert_to_int_str"], [11, 4, 1, "", "is_number"], [11, 4, 1, "", "log_assert"], [11, 4, 1, "", "remove_ignore_if_not_exists"], [11, 4, 1, "", "remove_tail_dot_zeros"], [11, 4, 1, "", "setup_logger"]], "medicaid_utils.common_utils.stats_utils": [[11, 4, 1, "", "color_positive_green"], [11, 4, 1, "", "compute_contingency_table"], [11, 4, 1, "", "compute_descriptives"], [11, 4, 1, "", "compute_missing_stats"], [11, 4, 1, "", "compute_t_stats"], [11, 4, 1, "", "cramers_corrected_stat"], [11, 4, 1, "", "get_cont_table_statewise"], [11, 4, 1, "", "get_contingency_table"], [11, 4, 1, "", "get_covar_plots"], [11, 4, 1, "", "get_descriptives"], [11, 4, 1, "", "get_missingness_stats"], [11, 4, 1, "", "get_phi"], [11, 4, 1, "", "get_ranksum_table"], [11, 4, 1, "", "get_ranksum_table_statewise"], [11, 4, 1, "", "get_utilisation_histograms"]], "medicaid_utils.common_utils.usps_address": [[11, 1, 1, "", "AddressStandardizationWebTool"], [11, 1, 1, "", "USPSAddress"], [11, 1, 1, "", "USPSShippingAPI"], [11, 4, 1, "", "dump_xml"], [11, 4, 1, "", "get_text"]], "medicaid_utils.common_utils.usps_address.AddressStandardizationWebTool": [[11, 2, 1, "", "api"], [11, 3, 1, "", "get_standardized_address"]], "medicaid_utils.common_utils.usps_address.USPSAddress": [[11, 3, 1, "", "original"], [11, 3, 1, "", "standardized"], [11, 3, 1, "", "zipcode"]], "medicaid_utils.common_utils.usps_address.USPSShippingAPI": [[11, 3, 1, "", "send_request"], [11, 2, 1, "", "url"]], "medicaid_utils.filters": [[13, 0, 0, "-", "claims"], [14, 0, 0, "-", "patients"]], "medicaid_utils.filters.claims": [[13, 0, 0, "-", "dx_and_proc"], [13, 0, 0, "-", "rx"]], "medicaid_utils.filters.claims.dx_and_proc": [[13, 4, 1, "", "flag_diagnoses_and_procedures"], [13, 4, 1, "", "get_patient_ids_with_conditions"]], "medicaid_utils.filters.claims.rx": [[13, 4, 1, "", "flag_prescriptions"]], "medicaid_utils.filters.patients": [[14, 0, 0, "-", "cohort_extraction"]], "medicaid_utils.filters.patients.cohort_extraction": [[14, 4, 1, "", "apply_range_filter"], [14, 4, 1, "", "export_cohort_datasets"], [14, 4, 1, "", "extract_cohort"], [14, 4, 1, "", "filter_claim_files"]], "medicaid_utils.other_datasets": [[15, 0, 0, "-", "fqhc"], [15, 0, 0, "-", "hcris"], [15, 0, 0, "-", "npi"], [15, 0, 0, "-", "uds"], [15, 0, 0, "-", "zip"]], "medicaid_utils.other_datasets.fqhc": [[15, 4, 1, "", "generate_oscar_fqhc_npis"], [15, 4, 1, "", "get_file_name_dict"], [15, 4, 1, "", "get_fqhc_crosswalk"]], "medicaid_utils.other_datasets.hcris": [[15, 4, 1, "", "clean_address"], [15, 4, 1, "", "clean_hclinic_name"], [15, 4, 1, "", "clean_zip"], [15, 4, 1, "", "combine_and_clean_hcris_files"], [15, 4, 1, "", "compute_basic_match_purity"], [15, 4, 1, "", "compute_door_no_info"], [15, 4, 1, "", "compute_match_purity"], [15, 4, 1, "", "create_npi_fqhc_crosswalk"], [15, 4, 1, "", "filter_partial_matches"], [15, 4, 1, "", "flatten_nppes_query_result"], [15, 4, 1, "", "fuzzy_match"], [15, 4, 1, "", "get_taxonomies"], [15, 4, 1, "", "nppes_api_requests"], [15, 4, 1, "", "process_address_columns"], [15, 4, 1, "", "standardize_addresses"], [15, 4, 1, "", "street_address"]], "medicaid_utils.other_datasets.npi": [[15, 4, 1, "", "cleanup_raw_npi_files"], [15, 4, 1, "", "generate_npi_taxonomy_mappings"], [15, 4, 1, "", "generate_oscar_fqhc_npis"], [15, 4, 1, "", "wide_to_long_nppes_taxonomy_file"]], "medicaid_utils.other_datasets.uds": [[15, 4, 1, "", "clean_address"], [15, 4, 1, "", "clean_hclinic_name"], [15, 4, 1, "", "clean_zip"], [15, 4, 1, "", "combine_and_clean_uds_files"], [15, 4, 1, "", "combine_uds_fqhc_npi_crosswalks"], [15, 4, 1, "", "compute_basic_match_purity"], [15, 4, 1, "", "compute_door_no_info"], [15, 4, 1, "", "compute_match_purity"], [15, 4, 1, "", "create_npi_fqhc_crosswalk"], [15, 4, 1, "", "filter_partial_matches"], [15, 4, 1, "", "flatten_nppes_query_result"], [15, 4, 1, "", "fuzzy_match"], [15, 4, 1, "", "generate_and_combine_fqhc_npi_crosswalks"], [15, 4, 1, "", "generate_bhcmisid_fqhc_crosswalk"], [15, 4, 1, "", "generate_oscar_fqhc_npis"], [15, 4, 1, "", "get_file_name_dict"], [15, 4, 1, "", "get_taxonomies"], [15, 4, 1, "", "nppes_api_requests"], [15, 4, 1, "", "process_address_columns"], [15, 4, 1, "", "standardize_addresses"], [15, 4, 1, "", "street_address"]], "medicaid_utils.other_datasets.zip": [[15, 4, 1, "", "generate_zip_pcsa_ruca_crosswalk"], [15, 4, 1, "", "pool_zipcode_pcsa_datasets"]], "medicaid_utils.preprocessing": [[16, 0, 0, "-", "max_cc"], [16, 0, 0, "-", "max_file"], [16, 0, 0, "-", "max_ip"], [16, 0, 0, "-", "max_ot"], [16, 0, 0, "-", "max_ps"], [16, 0, 0, "-", "taf_file"], [16, 0, 0, "-", "taf_ip"], [16, 0, 0, "-", "taf_lt"], [16, 0, 0, "-", "taf_ot"], [16, 0, 0, "-", "taf_ps"], [16, 0, 0, "-", "taf_rx"]], "medicaid_utils.preprocessing.max_cc": [[16, 1, 1, "", "MAXCC"]], "medicaid_utils.preprocessing.max_cc.MAXCC": [[16, 3, 1, "", "agg_conditions"], [16, 3, 1, "", "get_chronic_conditions"]], "medicaid_utils.preprocessing.max_file": [[16, 1, 1, "", "MAXFile"]], "medicaid_utils.preprocessing.max_file.MAXFile": [[16, 3, 1, "", "add_gender"], [16, 3, 1, "", "cache_results"], [16, 3, 1, "", "calculate_payment"], [16, 3, 1, "", "clean"], [16, 3, 1, "", "clean_diag_codes"], [16, 3, 1, "", "clean_proc_codes"], [16, 3, 1, "", "export"], [16, 3, 1, "", "flag_ed_use"], [16, 3, 1, "", "get_claim_instance"], [16, 3, 1, "", "pq_export"], [16, 3, 1, "", "preprocess"], [16, 3, 1, "", "process_date_cols"]], "medicaid_utils.preprocessing.max_ip": [[16, 1, 1, "", "MAXIP"]], "medicaid_utils.preprocessing.max_ip.MAXIP": [[16, 3, 1, "", "clean"], [16, 3, 1, "", "flag_common_exclusions"], [16, 3, 1, "", "flag_duplicates"], [16, 3, 1, "", "flag_ip_overlaps"], [16, 3, 1, "", "preprocess"]], "medicaid_utils.preprocessing.max_ot": [[16, 1, 1, "", "MAXOT"]], "medicaid_utils.preprocessing.max_ot.MAXOT": [[16, 3, 1, "", "add_ot_flags"], [16, 3, 1, "", "clean"], [16, 3, 1, "", "find_ot_ip_overlaps"], [16, 3, 1, "", "flag_common_exclusions"], [16, 3, 1, "", "flag_dental"], [16, 3, 1, "", "flag_duplicates"], [16, 3, 1, "", "flag_em"], [16, 3, 1, "", "flag_ip_overlaps_and_ed"], [16, 3, 1, "", "flag_transport"], [16, 3, 1, "", "preprocess"]], "medicaid_utils.preprocessing.max_ps": [[16, 1, 1, "", "MAXPS"]], "medicaid_utils.preprocessing.max_ps.MAXPS": [[16, 3, 1, "", "add_eligibility_status_columns"], [16, 3, 1, "", "clean"], [16, 3, 1, "", "flag_common_exclusions"], [16, 3, 1, "", "flag_duals"], [16, 3, 1, "", "flag_restricted_benefits"], [16, 3, 1, "", "flag_rural"], [16, 3, 1, "", "flag_tanf"], [16, 3, 1, "", "preprocess"]], "medicaid_utils.preprocessing.taf_file": [[16, 1, 1, "", "TAFFile"]], "medicaid_utils.preprocessing.taf_file.TAFFile": [[16, 3, 1, "", "cache_results"], [16, 3, 1, "", "clean"], [16, 3, 1, "", "clean_codes"], [16, 3, 1, "", "clean_diag_codes"], [16, 3, 1, "", "clean_ndc_codes"], [16, 3, 1, "", "clean_proc_codes"], [16, 3, 1, "", "export"], [16, 3, 1, "", "flag_duplicates"], [16, 3, 1, "", "flag_ffs_and_encounter_claims"], [16, 3, 1, "", "gather_bene_level_diag_ndc_codes"], [16, 3, 1, "", "get_claim_instance"], [16, 3, 1, "", "pq_export"], [16, 3, 1, "", "preprocess"], [16, 3, 1, "", "process_date_cols"]], "medicaid_utils.preprocessing.taf_ip": [[16, 1, 1, "", "TAFIP"]], "medicaid_utils.preprocessing.taf_ip.TAFIP": [[16, 3, 1, "", "clean"], [16, 3, 1, "", "flag_common_exclusions"], [16, 3, 1, "", "preprocess"]], "medicaid_utils.preprocessing.taf_lt": [[16, 1, 1, "", "TAFLT"]], "medicaid_utils.preprocessing.taf_lt.TAFLT": [[16, 3, 1, "", "clean"], [16, 3, 1, "", "preprocess"]], "medicaid_utils.preprocessing.taf_ot": [[16, 1, 1, "", "TAFOT"]], "medicaid_utils.preprocessing.taf_ot.TAFOT": [[16, 3, 1, "", "clean"], [16, 3, 1, "", "flag_common_exclusions"], [16, 3, 1, "", "preprocess"]], "medicaid_utils.preprocessing.taf_ps": [[16, 1, 1, "", "TAFPS"]], "medicaid_utils.preprocessing.taf_ps.TAFPS": [[16, 3, 1, "", "add_gender"], [16, 3, 1, "", "add_mas_boe"], [16, 3, 1, "", "add_risk_adjustment_scores"], [16, 3, 1, "", "clean"], [16, 3, 1, "", "compute_enrollment_gaps"], [16, 3, 1, "", "flag_common_exclusions"], [16, 3, 1, "", "flag_dual"], [16, 3, 1, "", "flag_ffs_months"], [16, 3, 1, "", "flag_managed_care_months"], [16, 3, 1, "", "flag_medicaid_enrolled_months"], [16, 3, 1, "", "flag_restricted_benefits"], [16, 3, 1, "", "flag_rural"], [16, 3, 1, "", "flag_tanf"], [16, 3, 1, "", "gather_bene_level_diag_ndc_codes"], [16, 3, 1, "", "preprocess"]], "medicaid_utils.preprocessing.taf_rx": [[16, 1, 1, "", "TAFRX"]], "medicaid_utils.preprocessing.taf_rx.TAFRX": [[16, 3, 1, "", "clean"]], "medicaid_utils.topics": [[18, 0, 0, "-", "obgyn"], [19, 0, 0, "-", "oud"]], "medicaid_utils.topics.obgyn": [[18, 0, 0, "-", "cohort_indicators"], [18, 0, 0, "-", "comorbities"], [18, 0, 0, "-", "hospitalization"]], "medicaid_utils.topics.obgyn.cohort_indicators": [[18, 4, 1, "", "flag_religious_npis"], [18, 4, 1, "", "flag_transfers"]], "medicaid_utils.topics.obgyn.comorbities": [[18, 4, 1, "", "flag_chronic_conditions"]], "medicaid_utils.topics.obgyn.hospitalization": [[18, 4, 1, "", "calculate_conception"], [18, 4, 1, "", "flag_abnormal_pregnancy"], [18, 4, 1, "", "flag_delivery"], [18, 4, 1, "", "flag_delivery_mode"], [18, 4, 1, "", "flag_multiple_births"], [18, 4, 1, "", "flag_prenatal"], [18, 4, 1, "", "flag_preterm"], [18, 4, 1, "", "flag_smm_events"]], "medicaid_utils.topics.oud": [[19, 0, 0, "-", "care_settings"], [19, 0, 0, "-", "cooccurring_conditions"], [19, 0, 0, "-", "medication_and_behavioral_health"]], "medicaid_utils.topics.oud.care_settings": [[19, 4, 1, "", "flag_care_settings"]], "medicaid_utils.topics.oud.cooccurring_conditions": [[19, 4, 1, "", "flag_cooccurring_mental_health_claims"], [19, 4, 1, "", "flag_cooccurring_sud_claims"]], "medicaid_utils.topics.oud.medication_and_behavioral_health": [[19, 4, 1, "", "flag_proc_behavioral_health_trtmt"], [19, 4, 1, "", "flag_proc_buprenorphine"], [19, 4, 1, "", "flag_proc_buprenorphine_naloxone"], [19, 4, 1, "", "flag_proc_injectable_naltrexone"], [19, 4, 1, "", "flag_proc_methadone"], [19, 4, 1, "", "flag_rx_benzos_opioids"], [19, 4, 1, "", "flag_rx_buprenorphine"], [19, 4, 1, "", "flag_rx_buprenorphine_naloxone"], [19, 4, 1, "", "flag_rx_methadone"], [19, 4, 1, "", "flag_rx_oral_naltrexone"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"]}, "titleterms": {"welcom": 0, "medicaid_util": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "": 0, "document": 0, "content": 0, "indic": 0, "tabl": 0, "packag": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "subpackag": [1, 2, 12, 17], "adapted_algorithm": [2, 3, 4, 5, 6, 7, 8, 9, 10], "py_beto": 3, "submodul": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19], "betos_proc_cod": 3, "modul": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19], "py_cdpsmrx": 4, "cdps_rx_risk_adjust": 4, "py_ed_pqi": 5, "ed_pqi": 5, "py_elixhaus": 6, "elixhauser_comorbid": 6, "py_ip_pqi": 7, "data_gener": 7, "prevention_quality_ind": 7, "py_low_value_car": 8, "low_value_car": 8, "py_nyu_bil": 9, "billings_": 9, "py_pmca": 10, "pmca": 10, "common_util": 11, "dataframe_util": 11, "link": 11, "recip": 11, "stats_util": 11, "usps_address": 11, "filter": [12, 13, 14], "claim": 13, "dx_and_proc": 13, "rx": 13, "patient": 14, "cohort_extract": 14, "other_dataset": 15, "fqhc": 15, "hcri": 15, "npi": 15, "ud": 15, "zip": 15, "preprocess": 16, "max_cc": 16, "max_fil": 16, "max_ip": 16, "max_ot": 16, "max_p": 16, "taf_fil": 16, "taf_ip": 16, "taf_lt": 16, "taf_ot": 16, "taf_p": 16, "taf_rx": 16, "topic": [17, 18, 19], "obgyn": 18, "cohort_ind": 18, "comorb": 18, "hospit": 18, "oud": 19, "care_set": 19, "cooccurring_condit": 19, "medication_and_behavioral_health": 19}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Welcome to medicaid_utils\u2019s documentation!": [[0, "welcome-to-medicaid-utils-s-documentation"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "medicaid_utils package": [[1, "module-medicaid_utils"]], "Subpackages": [[1, "subpackages"], [2, "subpackages"], [12, "subpackages"], [17, "subpackages"]], "medicaid_utils.adapted_algorithms package": [[2, "module-medicaid_utils.adapted_algorithms"]], "medicaid_utils.adapted_algorithms.py_betos package": [[3, "module-medicaid_utils.adapted_algorithms.py_betos"]], "Submodules": [[3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [13, "submodules"], [14, "submodules"], [15, "submodules"], [16, "submodules"], [18, "submodules"], [19, "submodules"]], "medicaid_utils.adapted_algorithms.py_betos.betos_proc_codes module": [[3, "module-medicaid_utils.adapted_algorithms.py_betos.betos_proc_codes"]], "medicaid_utils.adapted_algorithms.py_cdpsmrx package": [[4, "module-medicaid_utils.adapted_algorithms.py_cdpsmrx"]], "medicaid_utils.adapted_algorithms.py_cdpsmrx.cdps_rx_risk_adjustment module": [[4, "module-medicaid_utils.adapted_algorithms.py_cdpsmrx.cdps_rx_risk_adjustment"]], "medicaid_utils.adapted_algorithms.py_ed_pqi package": [[5, "module-medicaid_utils.adapted_algorithms.py_ed_pqi"]], "medicaid_utils.adapted_algorithms.py_ed_pqi.ed_pqi module": [[5, "module-medicaid_utils.adapted_algorithms.py_ed_pqi.ed_pqi"]], "medicaid_utils.adapted_algorithms.py_elixhauser package": [[6, "module-medicaid_utils.adapted_algorithms.py_elixhauser"]], "medicaid_utils.adapted_algorithms.py_elixhauser.elixhauser_comorbidity module": [[6, "module-medicaid_utils.adapted_algorithms.py_elixhauser.elixhauser_comorbidity"]], "medicaid_utils.adapted_algorithms.py_ip_pqi package": [[7, "module-medicaid_utils.adapted_algorithms.py_ip_pqi"]], "medicaid_utils.adapted_algorithms.py_ip_pqi.data_generation module": [[7, "module-medicaid_utils.adapted_algorithms.py_ip_pqi.data_generation"]], "medicaid_utils.adapted_algorithms.py_ip_pqi.prevention_quality_indicators module": [[7, "module-medicaid_utils.adapted_algorithms.py_ip_pqi.prevention_quality_indicators"]], "medicaid_utils.adapted_algorithms.py_low_value_care package": [[8, "module-medicaid_utils.adapted_algorithms.py_low_value_care"]], "medicaid_utils.adapted_algorithms.py_low_value_care.low_value_care module": [[8, "module-medicaid_utils.adapted_algorithms.py_low_value_care.low_value_care"]], "medicaid_utils.adapted_algorithms.py_nyu_billings package": [[9, "module-medicaid_utils.adapted_algorithms.py_nyu_billings"]], "medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed module": [[9, "module-medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed"]], "medicaid_utils.adapted_algorithms.py_pmca package": [[10, "module-medicaid_utils.adapted_algorithms.py_pmca"]], "medicaid_utils.adapted_algorithms.py_pmca.pmca module": [[10, "module-medicaid_utils.adapted_algorithms.py_pmca.pmca"]], "medicaid_utils.common_utils package": [[11, "module-medicaid_utils.common_utils"]], "medicaid_utils.common_utils.dataframe_utils module": [[11, "module-medicaid_utils.common_utils.dataframe_utils"]], "medicaid_utils.common_utils.links module": [[11, "module-medicaid_utils.common_utils.links"]], "medicaid_utils.common_utils.recipes module": [[11, "module-medicaid_utils.common_utils.recipes"]], "medicaid_utils.common_utils.stats_utils module": [[11, "module-medicaid_utils.common_utils.stats_utils"]], "medicaid_utils.common_utils.usps_address module": [[11, "module-medicaid_utils.common_utils.usps_address"]], "medicaid_utils.filters package": [[12, "module-medicaid_utils.filters"]], "medicaid_utils.filters.claims package": [[13, "module-medicaid_utils.filters.claims"]], "medicaid_utils.filters.claims.dx_and_proc module": [[13, "module-medicaid_utils.filters.claims.dx_and_proc"]], "medicaid_utils.filters.claims.rx module": [[13, "module-medicaid_utils.filters.claims.rx"]], "medicaid_utils.filters.patients package": [[14, "module-medicaid_utils.filters.patients"]], "medicaid_utils.filters.patients.cohort_extraction module": [[14, "module-medicaid_utils.filters.patients.cohort_extraction"]], "medicaid_utils.other_datasets package": [[15, "module-medicaid_utils.other_datasets"]], "medicaid_utils.other_datasets.fqhc module": [[15, "module-medicaid_utils.other_datasets.fqhc"]], "medicaid_utils.other_datasets.hcris module": [[15, "module-medicaid_utils.other_datasets.hcris"]], "medicaid_utils.other_datasets.npi module": [[15, "module-medicaid_utils.other_datasets.npi"]], "medicaid_utils.other_datasets.uds module": [[15, "module-medicaid_utils.other_datasets.uds"]], "medicaid_utils.other_datasets.zip module": [[15, "module-medicaid_utils.other_datasets.zip"]], "medicaid_utils.preprocessing package": [[16, "module-medicaid_utils.preprocessing"]], "medicaid_utils.preprocessing.max_cc module": [[16, "module-medicaid_utils.preprocessing.max_cc"]], "medicaid_utils.preprocessing.max_file module": [[16, "module-medicaid_utils.preprocessing.max_file"]], "medicaid_utils.preprocessing.max_ip module": [[16, "module-medicaid_utils.preprocessing.max_ip"]], "medicaid_utils.preprocessing.max_ot module": [[16, "module-medicaid_utils.preprocessing.max_ot"]], "medicaid_utils.preprocessing.max_ps module": [[16, "module-medicaid_utils.preprocessing.max_ps"]], "medicaid_utils.preprocessing.taf_file module": [[16, "module-medicaid_utils.preprocessing.taf_file"]], "medicaid_utils.preprocessing.taf_ip module": [[16, "module-medicaid_utils.preprocessing.taf_ip"]], "medicaid_utils.preprocessing.taf_lt module": [[16, "module-medicaid_utils.preprocessing.taf_lt"]], "medicaid_utils.preprocessing.taf_ot module": [[16, "module-medicaid_utils.preprocessing.taf_ot"]], "medicaid_utils.preprocessing.taf_ps module": [[16, "module-medicaid_utils.preprocessing.taf_ps"]], "medicaid_utils.preprocessing.taf_rx module": [[16, "module-medicaid_utils.preprocessing.taf_rx"]], "medicaid_utils.topics package": [[17, "module-medicaid_utils.topics"]], "medicaid_utils.topics.obgyn package": [[18, "module-medicaid_utils.topics.obgyn"]], "medicaid_utils.topics.obgyn.cohort_indicators module": [[18, "module-medicaid_utils.topics.obgyn.cohort_indicators"]], "medicaid_utils.topics.obgyn.comorbities module": [[18, "module-medicaid_utils.topics.obgyn.comorbities"]], "medicaid_utils.topics.obgyn.hospitalization module": [[18, "module-medicaid_utils.topics.obgyn.hospitalization"]], "medicaid_utils.topics.oud package": [[19, "module-medicaid_utils.topics.oud"]], "medicaid_utils.topics.oud.care_settings module": [[19, "module-medicaid_utils.topics.oud.care_settings"]], "medicaid_utils.topics.oud.cooccurring_conditions module": [[19, "module-medicaid_utils.topics.oud.cooccurring_conditions"]], "medicaid_utils.topics.oud.medication_and_behavioral_health module": [[19, "module-medicaid_utils.topics.oud.medication_and_behavioral_health"]], "medicaid_utils": [[20, "medicaid-utils"]]}, "indexentries": {"medicaid_utils": [[1, "module-medicaid_utils"]], "module": [[1, "module-medicaid_utils"], [2, "module-medicaid_utils.adapted_algorithms"], [3, "module-medicaid_utils.adapted_algorithms.py_betos"], [3, "module-medicaid_utils.adapted_algorithms.py_betos.betos_proc_codes"], [4, "module-medicaid_utils.adapted_algorithms.py_cdpsmrx"], [4, "module-medicaid_utils.adapted_algorithms.py_cdpsmrx.cdps_rx_risk_adjustment"], [5, "module-medicaid_utils.adapted_algorithms.py_ed_pqi"], [5, "module-medicaid_utils.adapted_algorithms.py_ed_pqi.ed_pqi"], [6, "module-medicaid_utils.adapted_algorithms.py_elixhauser"], [6, "module-medicaid_utils.adapted_algorithms.py_elixhauser.elixhauser_comorbidity"], [7, "module-medicaid_utils.adapted_algorithms.py_ip_pqi"], [7, "module-medicaid_utils.adapted_algorithms.py_ip_pqi.data_generation"], [7, "module-medicaid_utils.adapted_algorithms.py_ip_pqi.prevention_quality_indicators"], [8, "module-medicaid_utils.adapted_algorithms.py_low_value_care"], [8, "module-medicaid_utils.adapted_algorithms.py_low_value_care.low_value_care"], [9, "module-medicaid_utils.adapted_algorithms.py_nyu_billings"], [9, "module-medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed"], [10, "module-medicaid_utils.adapted_algorithms.py_pmca"], [10, "module-medicaid_utils.adapted_algorithms.py_pmca.pmca"], [11, "module-medicaid_utils.common_utils"], [11, "module-medicaid_utils.common_utils.dataframe_utils"], [11, "module-medicaid_utils.common_utils.links"], [11, "module-medicaid_utils.common_utils.recipes"], [11, "module-medicaid_utils.common_utils.stats_utils"], [11, "module-medicaid_utils.common_utils.usps_address"], [12, "module-medicaid_utils.filters"], [13, "module-medicaid_utils.filters.claims"], [13, "module-medicaid_utils.filters.claims.dx_and_proc"], [13, "module-medicaid_utils.filters.claims.rx"], [14, "module-medicaid_utils.filters.patients"], [14, "module-medicaid_utils.filters.patients.cohort_extraction"], [15, "module-medicaid_utils.other_datasets"], [15, "module-medicaid_utils.other_datasets.fqhc"], [15, "module-medicaid_utils.other_datasets.hcris"], [15, "module-medicaid_utils.other_datasets.npi"], [15, "module-medicaid_utils.other_datasets.uds"], [15, "module-medicaid_utils.other_datasets.zip"], [16, "module-medicaid_utils.preprocessing"], [16, "module-medicaid_utils.preprocessing.max_cc"], [16, "module-medicaid_utils.preprocessing.max_file"], [16, "module-medicaid_utils.preprocessing.max_ip"], [16, "module-medicaid_utils.preprocessing.max_ot"], [16, "module-medicaid_utils.preprocessing.max_ps"], [16, "module-medicaid_utils.preprocessing.taf_file"], [16, "module-medicaid_utils.preprocessing.taf_ip"], [16, "module-medicaid_utils.preprocessing.taf_lt"], [16, "module-medicaid_utils.preprocessing.taf_ot"], [16, "module-medicaid_utils.preprocessing.taf_ps"], [16, "module-medicaid_utils.preprocessing.taf_rx"], [17, "module-medicaid_utils.topics"], [18, "module-medicaid_utils.topics.obgyn"], [18, "module-medicaid_utils.topics.obgyn.cohort_indicators"], [18, "module-medicaid_utils.topics.obgyn.comorbities"], [18, "module-medicaid_utils.topics.obgyn.hospitalization"], [19, "module-medicaid_utils.topics.oud"], [19, "module-medicaid_utils.topics.oud.care_settings"], [19, "module-medicaid_utils.topics.oud.cooccurring_conditions"], [19, "module-medicaid_utils.topics.oud.medication_and_behavioral_health"]], "medicaid_utils.adapted_algorithms": [[2, "module-medicaid_utils.adapted_algorithms"]], "betosproccodes (class in medicaid_utils.adapted_algorithms.py_betos.betos_proc_codes)": [[3, "medicaid_utils.adapted_algorithms.py_betos.betos_proc_codes.BetosProcCodes"]], "assign_betos_cat() (in module medicaid_utils.adapted_algorithms.py_betos.betos_proc_codes)": [[3, "medicaid_utils.adapted_algorithms.py_betos.betos_proc_codes.assign_betos_cat"]], "data_folder (medicaid_utils.adapted_algorithms.py_betos.betos_proc_codes.betosproccodes attribute)": [[3, "medicaid_utils.adapted_algorithms.py_betos.betos_proc_codes.BetosProcCodes.data_folder"]], "filename (medicaid_utils.adapted_algorithms.py_betos.betos_proc_codes.betosproccodes attribute)": [[3, "medicaid_utils.adapted_algorithms.py_betos.betos_proc_codes.BetosProcCodes.filename"]], "get_betos_cat() (medicaid_utils.adapted_algorithms.py_betos.betos_proc_codes.betosproccodes class method)": [[3, "medicaid_utils.adapted_algorithms.py_betos.betos_proc_codes.BetosProcCodes.get_betos_cat"]], "get_betos_cpt_crosswalk() (medicaid_utils.adapted_algorithms.py_betos.betos_proc_codes.betosproccodes class method)": [[3, "medicaid_utils.adapted_algorithms.py_betos.betos_proc_codes.BetosProcCodes.get_betos_cpt_crosswalk"]], "medicaid_utils.adapted_algorithms.py_betos": [[3, "module-medicaid_utils.adapted_algorithms.py_betos"]], "medicaid_utils.adapted_algorithms.py_betos.betos_proc_codes": [[3, "module-medicaid_utils.adapted_algorithms.py_betos.betos_proc_codes"]], "package_folder (medicaid_utils.adapted_algorithms.py_betos.betos_proc_codes.betosproccodes attribute)": [[3, "medicaid_utils.adapted_algorithms.py_betos.betos_proc_codes.BetosProcCodes.package_folder"]], "cdpsrxriskadjustment (class in medicaid_utils.adapted_algorithms.py_cdpsmrx.cdps_rx_risk_adjustment)": [[4, "medicaid_utils.adapted_algorithms.py_cdpsmrx.cdps_rx_risk_adjustment.CdpsRxRiskAdjustment"]], "add_age_and_gender_cols() (medicaid_utils.adapted_algorithms.py_cdpsmrx.cdps_rx_risk_adjustment.cdpsrxriskadjustment class method)": [[4, "medicaid_utils.adapted_algorithms.py_cdpsmrx.cdps_rx_risk_adjustment.CdpsRxRiskAdjustment.add_age_and_gender_cols"]], "add_cdps_category_cols() (medicaid_utils.adapted_algorithms.py_cdpsmrx.cdps_rx_risk_adjustment.cdpsrxriskadjustment class method)": [[4, "medicaid_utils.adapted_algorithms.py_cdpsmrx.cdps_rx_risk_adjustment.CdpsRxRiskAdjustment.add_cdps_category_cols"]], "add_mrx_cat_cols() (medicaid_utils.adapted_algorithms.py_cdpsmrx.cdps_rx_risk_adjustment.cdpsrxriskadjustment class method)": [[4, "medicaid_utils.adapted_algorithms.py_cdpsmrx.cdps_rx_risk_adjustment.CdpsRxRiskAdjustment.add_mrx_cat_cols"]], "calculate_risk() (medicaid_utils.adapted_algorithms.py_cdpsmrx.cdps_rx_risk_adjustment.cdpsrxriskadjustment class method)": [[4, "medicaid_utils.adapted_algorithms.py_cdpsmrx.cdps_rx_risk_adjustment.CdpsRxRiskAdjustment.calculate_risk"]], "cdps_rx_risk_adjust() (in module medicaid_utils.adapted_algorithms.py_cdpsmrx.cdps_rx_risk_adjustment)": [[4, "medicaid_utils.adapted_algorithms.py_cdpsmrx.cdps_rx_risk_adjustment.cdps_rx_risk_adjust"]], "combine_cdps_mrx_hierarchies() (medicaid_utils.adapted_algorithms.py_cdpsmrx.cdps_rx_risk_adjustment.cdpsrxriskadjustment class method)": [[4, "medicaid_utils.adapted_algorithms.py_cdpsmrx.cdps_rx_risk_adjustment.CdpsRxRiskAdjustment.combine_cdps_mrx_hierarchies"]], "data_folder (medicaid_utils.adapted_algorithms.py_cdpsmrx.cdps_rx_risk_adjustment.cdpsrxriskadjustment attribute)": [[4, "medicaid_utils.adapted_algorithms.py_cdpsmrx.cdps_rx_risk_adjustment.CdpsRxRiskAdjustment.data_folder"]], "filename (medicaid_utils.adapted_algorithms.py_cdpsmrx.cdps_rx_risk_adjustment.cdpsrxriskadjustment attribute)": [[4, "medicaid_utils.adapted_algorithms.py_cdpsmrx.cdps_rx_risk_adjustment.CdpsRxRiskAdjustment.filename"]], "medicaid_utils.adapted_algorithms.py_cdpsmrx": [[4, "module-medicaid_utils.adapted_algorithms.py_cdpsmrx"]], "medicaid_utils.adapted_algorithms.py_cdpsmrx.cdps_rx_risk_adjustment": [[4, "module-medicaid_utils.adapted_algorithms.py_cdpsmrx.cdps_rx_risk_adjustment"]], "package_folder (medicaid_utils.adapted_algorithms.py_cdpsmrx.cdps_rx_risk_adjustment.cdpsrxriskadjustment attribute)": [[4, "medicaid_utils.adapted_algorithms.py_cdpsmrx.cdps_rx_risk_adjustment.CdpsRxRiskAdjustment.package_folder"]], "edpreventionqualityindicators (class in medicaid_utils.adapted_algorithms.py_ed_pqi.ed_pqi)": [[5, "medicaid_utils.adapted_algorithms.py_ed_pqi.ed_pqi.EDPreventionQualityIndicators"]], "data_folder (medicaid_utils.adapted_algorithms.py_ed_pqi.ed_pqi.edpreventionqualityindicators attribute)": [[5, "medicaid_utils.adapted_algorithms.py_ed_pqi.ed_pqi.EDPreventionQualityIndicators.data_folder"]], "filename (medicaid_utils.adapted_algorithms.py_ed_pqi.ed_pqi.edpreventionqualityindicators attribute)": [[5, "medicaid_utils.adapted_algorithms.py_ed_pqi.ed_pqi.EDPreventionQualityIndicators.filename"]], "fix_index() (in module medicaid_utils.adapted_algorithms.py_ed_pqi.ed_pqi)": [[5, "medicaid_utils.adapted_algorithms.py_ed_pqi.ed_pqi.fix_index"]], "flag_potentially_preventable_ed_visits() (medicaid_utils.adapted_algorithms.py_ed_pqi.ed_pqi.edpreventionqualityindicators class method)": [[5, "medicaid_utils.adapted_algorithms.py_ed_pqi.ed_pqi.EDPreventionQualityIndicators.flag_potentially_preventable_ed_visits"]], "get_ed_pqis() (in module medicaid_utils.adapted_algorithms.py_ed_pqi.ed_pqi)": [[5, "medicaid_utils.adapted_algorithms.py_ed_pqi.ed_pqi.get_ed_pqis"]], "get_patient_exclusion_indicators() (medicaid_utils.adapted_algorithms.py_ed_pqi.ed_pqi.edpreventionqualityindicators class method)": [[5, "medicaid_utils.adapted_algorithms.py_ed_pqi.ed_pqi.EDPreventionQualityIndicators.get_patient_exclusion_indicators"]], "medicaid_utils.adapted_algorithms.py_ed_pqi": [[5, "module-medicaid_utils.adapted_algorithms.py_ed_pqi"]], "medicaid_utils.adapted_algorithms.py_ed_pqi.ed_pqi": [[5, "module-medicaid_utils.adapted_algorithms.py_ed_pqi.ed_pqi"]], "package_folder (medicaid_utils.adapted_algorithms.py_ed_pqi.ed_pqi.edpreventionqualityindicators attribute)": [[5, "medicaid_utils.adapted_algorithms.py_ed_pqi.ed_pqi.EDPreventionQualityIndicators.package_folder"]], "elixhauserscoring (class in medicaid_utils.adapted_algorithms.py_elixhauser.elixhauser_comorbidity)": [[6, "medicaid_utils.adapted_algorithms.py_elixhauser.elixhauser_comorbidity.ElixhauserScoring"]], "calculate_final_score() (medicaid_utils.adapted_algorithms.py_elixhauser.elixhauser_comorbidity.elixhauserscoring class method)": [[6, "medicaid_utils.adapted_algorithms.py_elixhauser.elixhauser_comorbidity.ElixhauserScoring.calculate_final_score"]], "data_folder (medicaid_utils.adapted_algorithms.py_elixhauser.elixhauser_comorbidity.elixhauserscoring attribute)": [[6, "medicaid_utils.adapted_algorithms.py_elixhauser.elixhauser_comorbidity.ElixhauserScoring.data_folder"]], "filename (medicaid_utils.adapted_algorithms.py_elixhauser.elixhauser_comorbidity.elixhauserscoring attribute)": [[6, "medicaid_utils.adapted_algorithms.py_elixhauser.elixhauser_comorbidity.ElixhauserScoring.filename"]], "flag_comorbidities() (medicaid_utils.adapted_algorithms.py_elixhauser.elixhauser_comorbidity.elixhauserscoring class method)": [[6, "medicaid_utils.adapted_algorithms.py_elixhauser.elixhauser_comorbidity.ElixhauserScoring.flag_comorbidities"]], "medicaid_utils.adapted_algorithms.py_elixhauser": [[6, "module-medicaid_utils.adapted_algorithms.py_elixhauser"]], "medicaid_utils.adapted_algorithms.py_elixhauser.elixhauser_comorbidity": [[6, "module-medicaid_utils.adapted_algorithms.py_elixhauser.elixhauser_comorbidity"]], "package_folder (medicaid_utils.adapted_algorithms.py_elixhauser.elixhauser_comorbidity.elixhauserscoring attribute)": [[6, "medicaid_utils.adapted_algorithms.py_elixhauser.elixhauser_comorbidity.ElixhauserScoring.package_folder"]], "score() (in module medicaid_utils.adapted_algorithms.py_elixhauser.elixhauser_comorbidity)": [[6, "medicaid_utils.adapted_algorithms.py_elixhauser.elixhauser_comorbidity.score"]], "preventionqualityindicators (class in medicaid_utils.adapted_algorithms.py_ip_pqi.prevention_quality_indicators)": [[7, "medicaid_utils.adapted_algorithms.py_ip_pqi.prevention_quality_indicators.PreventionQualityIndicators"]], "add_acsc_cat_cols() (medicaid_utils.adapted_algorithms.py_ip_pqi.prevention_quality_indicators.preventionqualityindicators class method)": [[7, "medicaid_utils.adapted_algorithms.py_ip_pqi.prevention_quality_indicators.PreventionQualityIndicators.add_acsc_cat_cols"]], "add_area_level_indicator_cols() (medicaid_utils.adapted_algorithms.py_ip_pqi.prevention_quality_indicators.preventionqualityindicators class method)": [[7, "medicaid_utils.adapted_algorithms.py_ip_pqi.prevention_quality_indicators.PreventionQualityIndicators.add_area_level_indicator_cols"]], "add_drg_cols() (medicaid_utils.adapted_algorithms.py_ip_pqi.prevention_quality_indicators.preventionqualityindicators class method)": [[7, "medicaid_utils.adapted_algorithms.py_ip_pqi.prevention_quality_indicators.PreventionQualityIndicators.add_drg_cols"]], "add_neonate_newborn_cols() (medicaid_utils.adapted_algorithms.py_ip_pqi.prevention_quality_indicators.preventionqualityindicators class method)": [[7, "medicaid_utils.adapted_algorithms.py_ip_pqi.prevention_quality_indicators.PreventionQualityIndicators.add_neonate_newborn_cols"]], "add_pr_dxgrp_cols() (medicaid_utils.adapted_algorithms.py_ip_pqi.prevention_quality_indicators.preventionqualityindicators class method)": [[7, "medicaid_utils.adapted_algorithms.py_ip_pqi.prevention_quality_indicators.PreventionQualityIndicators.add_pr_dxgrp_cols"]], "data_folder (medicaid_utils.adapted_algorithms.py_ip_pqi.prevention_quality_indicators.preventionqualityindicators attribute)": [[7, "medicaid_utils.adapted_algorithms.py_ip_pqi.prevention_quality_indicators.PreventionQualityIndicators.data_folder"]], "filename (medicaid_utils.adapted_algorithms.py_ip_pqi.prevention_quality_indicators.preventionqualityindicators attribute)": [[7, "medicaid_utils.adapted_algorithms.py_ip_pqi.prevention_quality_indicators.PreventionQualityIndicators.filename"]], "generate_dxgrp_file() (in module medicaid_utils.adapted_algorithms.py_ip_pqi.data_generation)": [[7, "medicaid_utils.adapted_algorithms.py_ip_pqi.data_generation.generate_dxgrp_file"]], "generate_prgrp_file() (in module medicaid_utils.adapted_algorithms.py_ip_pqi.data_generation)": [[7, "medicaid_utils.adapted_algorithms.py_ip_pqi.data_generation.generate_prgrp_file"]], "logger_name (medicaid_utils.adapted_algorithms.py_ip_pqi.prevention_quality_indicators.preventionqualityindicators attribute)": [[7, "medicaid_utils.adapted_algorithms.py_ip_pqi.prevention_quality_indicators.PreventionQualityIndicators.logger_name"]], "medicaid_utils.adapted_algorithms.py_ip_pqi": [[7, "module-medicaid_utils.adapted_algorithms.py_ip_pqi"]], "medicaid_utils.adapted_algorithms.py_ip_pqi.data_generation": [[7, "module-medicaid_utils.adapted_algorithms.py_ip_pqi.data_generation"]], "medicaid_utils.adapted_algorithms.py_ip_pqi.prevention_quality_indicators": [[7, "module-medicaid_utils.adapted_algorithms.py_ip_pqi.prevention_quality_indicators"]], "package_folder (medicaid_utils.adapted_algorithms.py_ip_pqi.prevention_quality_indicators.preventionqualityindicators attribute)": [[7, "medicaid_utils.adapted_algorithms.py_ip_pqi.prevention_quality_indicators.PreventionQualityIndicators.package_folder"]], "pqirecode() (in module medicaid_utils.adapted_algorithms.py_ip_pqi.prevention_quality_indicators)": [[7, "medicaid_utils.adapted_algorithms.py_ip_pqi.prevention_quality_indicators.pqirecode"]], "prepare_cols() (medicaid_utils.adapted_algorithms.py_ip_pqi.prevention_quality_indicators.preventionqualityindicators class method)": [[7, "medicaid_utils.adapted_algorithms.py_ip_pqi.prevention_quality_indicators.PreventionQualityIndicators.prepare_cols"]], "lowvaluecare (class in medicaid_utils.adapted_algorithms.py_low_value_care.low_value_care)": [[8, "medicaid_utils.adapted_algorithms.py_low_value_care.low_value_care.LowValueCare"]], "construct_low_value_care_measures() (in module medicaid_utils.adapted_algorithms.py_low_value_care.low_value_care)": [[8, "medicaid_utils.adapted_algorithms.py_low_value_care.low_value_care.construct_low_value_care_measures"]], "construct_low_value_care_measures() (medicaid_utils.adapted_algorithms.py_low_value_care.low_value_care.lowvaluecare class method)": [[8, "medicaid_utils.adapted_algorithms.py_low_value_care.low_value_care.LowValueCare.construct_low_value_care_measures"]], "data_folder (medicaid_utils.adapted_algorithms.py_low_value_care.low_value_care.lowvaluecare attribute)": [[8, "medicaid_utils.adapted_algorithms.py_low_value_care.low_value_care.LowValueCare.data_folder"]], "filename (medicaid_utils.adapted_algorithms.py_low_value_care.low_value_care.lowvaluecare attribute)": [[8, "medicaid_utils.adapted_algorithms.py_low_value_care.low_value_care.LowValueCare.filename"]], "generate_condn_and_eligibility_indicators() (medicaid_utils.adapted_algorithms.py_low_value_care.low_value_care.lowvaluecare class method)": [[8, "medicaid_utils.adapted_algorithms.py_low_value_care.low_value_care.LowValueCare.generate_condn_and_eligibility_indicators"]], "get_dates() (medicaid_utils.adapted_algorithms.py_low_value_care.low_value_care.lowvaluecare class method)": [[8, "medicaid_utils.adapted_algorithms.py_low_value_care.low_value_care.LowValueCare.get_dates"]], "get_dates_with_eligibility() (medicaid_utils.adapted_algorithms.py_low_value_care.low_value_care.lowvaluecare class method)": [[8, "medicaid_utils.adapted_algorithms.py_low_value_care.low_value_care.LowValueCare.get_dates_with_eligibility"]], "get_denom_measure_spec() (medicaid_utils.adapted_algorithms.py_low_value_care.low_value_care.lowvaluecare class method)": [[8, "medicaid_utils.adapted_algorithms.py_low_value_care.low_value_care.LowValueCare.get_denom_measure_spec"]], "get_diag_proc_codes() (medicaid_utils.adapted_algorithms.py_low_value_care.low_value_care.lowvaluecare class method)": [[8, "medicaid_utils.adapted_algorithms.py_low_value_care.low_value_care.LowValueCare.get_diag_proc_codes"]], "get_diag_proc_specs() (medicaid_utils.adapted_algorithms.py_low_value_care.low_value_care.lowvaluecare class method)": [[8, "medicaid_utils.adapted_algorithms.py_low_value_care.low_value_care.LowValueCare.get_diag_proc_specs"]], "medicaid_utils.adapted_algorithms.py_low_value_care": [[8, "module-medicaid_utils.adapted_algorithms.py_low_value_care"]], "medicaid_utils.adapted_algorithms.py_low_value_care.low_value_care": [[8, "module-medicaid_utils.adapted_algorithms.py_low_value_care.low_value_care"]], "normalize_condition_names() (medicaid_utils.adapted_algorithms.py_low_value_care.low_value_care.lowvaluecare class method)": [[8, "medicaid_utils.adapted_algorithms.py_low_value_care.low_value_care.LowValueCare.normalize_condition_names"]], "package_folder (medicaid_utils.adapted_algorithms.py_low_value_care.low_value_care.lowvaluecare attribute)": [[8, "medicaid_utils.adapted_algorithms.py_low_value_care.low_value_care.LowValueCare.package_folder"]], "billingsed (class in medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed)": [[9, "medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.BillingsED"]], "cat (medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.billingsed attribute)": [[9, "medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.BillingsED.cat"]], "data_folder (medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.billingsed attribute)": [[9, "medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.BillingsED.data_folder"]], "dct_category_dx_codes (medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.billingsed attribute)": [[9, "medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.BillingsED.dct_category_dx_codes"]], "dct_recode_non_startswith (medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.billingsed attribute)": [[9, "medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.BillingsED.dct_recode_non_startswith"]], "df_eddxs (medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.billingsed attribute)": [[9, "medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.BillingsED.df_eddxs"]], "filename (medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.billingsed attribute)": [[9, "medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.BillingsED.filename"]], "get_nyu_ed_categories() (medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.billingsed class method)": [[9, "medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.BillingsED.get_nyu_ed_categories"]], "get_nyu_ed_proba() (in module medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed)": [[9, "medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.get_nyu_ed_proba"]], "get_nyu_ed_proba_for_dx_code() (medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.billingsed class method)": [[9, "medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.BillingsED.get_nyu_ed_proba_for_dx_code"]], "get_special_categories() (medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.billingsed class method)": [[9, "medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.BillingsED.get_special_categories"]], "is_peds_acsed() (medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.billingsed class method)": [[9, "medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.BillingsED.is_peds_acsed"]], "logger_name (medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.billingsed attribute)": [[9, "medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.BillingsED.logger_name"]], "lst_special_ed_categories (medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.billingsed attribute)": [[9, "medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.BillingsED.lst_special_ed_categories"]], "medicaid_utils.adapted_algorithms.py_nyu_billings": [[9, "module-medicaid_utils.adapted_algorithms.py_nyu_billings"]], "medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed": [[9, "module-medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed"]], "package_folder (medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.billingsed attribute)": [[9, "medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.BillingsED.package_folder"]], "pdf_nonstartswith_recode (medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.billingsed attribute)": [[9, "medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.BillingsED.pdf_nonstartswith_recode"]], "pdf_recode (medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.billingsed attribute)": [[9, "medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.BillingsED.pdf_recode"]], "pdf_startswith_recode (medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.billingsed attribute)": [[9, "medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.BillingsED.pdf_startswith_recode"]], "recode_diag_code() (medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.billingsed class method)": [[9, "medicaid_utils.adapted_algorithms.py_nyu_billings.billings_ed.BillingsED.recode_diag_code"]], "pediatricmedicalcomplexity (class in medicaid_utils.adapted_algorithms.py_pmca.pmca)": [[10, "medicaid_utils.adapted_algorithms.py_pmca.pmca.PediatricMedicalComplexity"]], "create_pmca_condition_counts() (medicaid_utils.adapted_algorithms.py_pmca.pmca.pediatricmedicalcomplexity class method)": [[10, "medicaid_utils.adapted_algorithms.py_pmca.pmca.PediatricMedicalComplexity.create_pmca_condition_counts"]], "data_folder (medicaid_utils.adapted_algorithms.py_pmca.pmca.pediatricmedicalcomplexity attribute)": [[10, "medicaid_utils.adapted_algorithms.py_pmca.pmca.PediatricMedicalComplexity.data_folder"]], "filename (medicaid_utils.adapted_algorithms.py_pmca.pmca.pediatricmedicalcomplexity attribute)": [[10, "medicaid_utils.adapted_algorithms.py_pmca.pmca.PediatricMedicalComplexity.filename"]], "get_pmca_chronic_condition_categories() (medicaid_utils.adapted_algorithms.py_pmca.pmca.pediatricmedicalcomplexity class method)": [[10, "medicaid_utils.adapted_algorithms.py_pmca.pmca.PediatricMedicalComplexity.get_pmca_chronic_condition_categories"]], "medicaid_utils.adapted_algorithms.py_pmca": [[10, "module-medicaid_utils.adapted_algorithms.py_pmca"]], "medicaid_utils.adapted_algorithms.py_pmca.pmca": [[10, "module-medicaid_utils.adapted_algorithms.py_pmca.pmca"]], "package_folder (medicaid_utils.adapted_algorithms.py_pmca.pmca.pediatricmedicalcomplexity attribute)": [[10, "medicaid_utils.adapted_algorithms.py_pmca.pmca.PediatricMedicalComplexity.package_folder"]], "pmca_chronic_conditions() (in module medicaid_utils.adapted_algorithms.py_pmca.pmca)": [[10, "medicaid_utils.adapted_algorithms.py_pmca.pmca.pmca_chronic_conditions"]], "addressstandardizationwebtool (class in medicaid_utils.common_utils.usps_address)": [[11, "medicaid_utils.common_utils.usps_address.AddressStandardizationWebTool"]], "uspsaddress (class in medicaid_utils.common_utils.usps_address)": [[11, "medicaid_utils.common_utils.usps_address.USPSAddress"]], "uspsshippingapi (class in medicaid_utils.common_utils.usps_address)": [[11, "medicaid_utils.common_utils.usps_address.USPSShippingAPI"]], "api (medicaid_utils.common_utils.usps_address.addressstandardizationwebtool attribute)": [[11, "medicaid_utils.common_utils.usps_address.AddressStandardizationWebTool.api"]], "color_positive_green() (in module medicaid_utils.common_utils.stats_utils)": [[11, "medicaid_utils.common_utils.stats_utils.color_positive_green"]], "compute_contingency_table() (in module medicaid_utils.common_utils.stats_utils)": [[11, "medicaid_utils.common_utils.stats_utils.compute_contingency_table"]], "compute_descriptives() (in module medicaid_utils.common_utils.stats_utils)": [[11, "medicaid_utils.common_utils.stats_utils.compute_descriptives"]], "compute_missing_stats() (in module medicaid_utils.common_utils.stats_utils)": [[11, "medicaid_utils.common_utils.stats_utils.compute_missing_stats"]], "compute_t_stats() (in module medicaid_utils.common_utils.stats_utils)": [[11, "medicaid_utils.common_utils.stats_utils.compute_t_stats"]], "convert_ddcols_to_datetime() (in module medicaid_utils.common_utils.dataframe_utils)": [[11, "medicaid_utils.common_utils.dataframe_utils.convert_ddcols_to_datetime"]], "convert_to_int_str() (in module medicaid_utils.common_utils.recipes)": [[11, "medicaid_utils.common_utils.recipes.convert_to_int_str"]], "copy_ddcols() (in module medicaid_utils.common_utils.dataframe_utils)": [[11, "medicaid_utils.common_utils.dataframe_utils.copy_ddcols"]], "cramers_corrected_stat() (in module medicaid_utils.common_utils.stats_utils)": [[11, "medicaid_utils.common_utils.stats_utils.cramers_corrected_stat"]], "dump_xml() (in module medicaid_utils.common_utils.usps_address)": [[11, "medicaid_utils.common_utils.usps_address.dump_xml"]], "export() (in module medicaid_utils.common_utils.dataframe_utils)": [[11, "medicaid_utils.common_utils.dataframe_utils.export"]], "fix_index() (in module medicaid_utils.common_utils.dataframe_utils)": [[11, "medicaid_utils.common_utils.dataframe_utils.fix_index"]], "get_cont_table_statewise() (in module medicaid_utils.common_utils.stats_utils)": [[11, "medicaid_utils.common_utils.stats_utils.get_cont_table_statewise"]], "get_contingency_table() (in module medicaid_utils.common_utils.stats_utils)": [[11, "medicaid_utils.common_utils.stats_utils.get_contingency_table"]], "get_covar_plots() (in module medicaid_utils.common_utils.stats_utils)": [[11, "medicaid_utils.common_utils.stats_utils.get_covar_plots"]], "get_descriptives() (in module medicaid_utils.common_utils.stats_utils)": [[11, "medicaid_utils.common_utils.stats_utils.get_descriptives"]], "get_first_day_gap() (in module medicaid_utils.common_utils.dataframe_utils)": [[11, "medicaid_utils.common_utils.dataframe_utils.get_first_day_gap"]], "get_max_parquet_loc() (in module medicaid_utils.common_utils.links)": [[11, "medicaid_utils.common_utils.links.get_max_parquet_loc"]], "get_missingness_stats() (in module medicaid_utils.common_utils.stats_utils)": [[11, "medicaid_utils.common_utils.stats_utils.get_missingness_stats"]], "get_phi() (in module medicaid_utils.common_utils.stats_utils)": [[11, "medicaid_utils.common_utils.stats_utils.get_phi"]], "get_ranksum_table() (in module medicaid_utils.common_utils.stats_utils)": [[11, "medicaid_utils.common_utils.stats_utils.get_ranksum_table"]], "get_ranksum_table_statewise() (in module medicaid_utils.common_utils.stats_utils)": [[11, "medicaid_utils.common_utils.stats_utils.get_ranksum_table_statewise"]], "get_reduced_column_names() (in module medicaid_utils.common_utils.dataframe_utils)": [[11, "medicaid_utils.common_utils.dataframe_utils.get_reduced_column_names"]], "get_standardized_address() (medicaid_utils.common_utils.usps_address.addressstandardizationwebtool method)": [[11, "medicaid_utils.common_utils.usps_address.AddressStandardizationWebTool.get_standardized_address"]], "get_taf_parquet_loc() (in module medicaid_utils.common_utils.links)": [[11, "medicaid_utils.common_utils.links.get_taf_parquet_loc"]], "get_text() (in module medicaid_utils.common_utils.usps_address)": [[11, "medicaid_utils.common_utils.usps_address.get_text"]], "get_utilisation_histograms() (in module medicaid_utils.common_utils.stats_utils)": [[11, "medicaid_utils.common_utils.stats_utils.get_utilisation_histograms"]], "is_number() (in module medicaid_utils.common_utils.recipes)": [[11, "medicaid_utils.common_utils.recipes.is_number"]], "log_assert() (in module medicaid_utils.common_utils.recipes)": [[11, "medicaid_utils.common_utils.recipes.log_assert"]], "medicaid_utils.common_utils": [[11, "module-medicaid_utils.common_utils"]], "medicaid_utils.common_utils.dataframe_utils": [[11, "module-medicaid_utils.common_utils.dataframe_utils"]], "medicaid_utils.common_utils.links": [[11, "module-medicaid_utils.common_utils.links"]], "medicaid_utils.common_utils.recipes": [[11, "module-medicaid_utils.common_utils.recipes"]], "medicaid_utils.common_utils.stats_utils": [[11, "module-medicaid_utils.common_utils.stats_utils"]], "medicaid_utils.common_utils.usps_address": [[11, "module-medicaid_utils.common_utils.usps_address"]], "original() (medicaid_utils.common_utils.usps_address.uspsaddress method)": [[11, "medicaid_utils.common_utils.usps_address.USPSAddress.original"]], "prepare_dtypes_for_csv() (in module medicaid_utils.common_utils.dataframe_utils)": [[11, "medicaid_utils.common_utils.dataframe_utils.prepare_dtypes_for_csv"]], "remove_ignore_if_not_exists() (in module medicaid_utils.common_utils.recipes)": [[11, "medicaid_utils.common_utils.recipes.remove_ignore_if_not_exists"]], "remove_tail_dot_zeros() (in module medicaid_utils.common_utils.recipes)": [[11, "medicaid_utils.common_utils.recipes.remove_tail_dot_zeros"]], "safe_convert_int_to_str() (in module medicaid_utils.common_utils.dataframe_utils)": [[11, "medicaid_utils.common_utils.dataframe_utils.safe_convert_int_to_str"]], "sas_to_pandas() (in module medicaid_utils.common_utils.dataframe_utils)": [[11, "medicaid_utils.common_utils.dataframe_utils.sas_to_pandas"]], "send_request() (medicaid_utils.common_utils.usps_address.uspsshippingapi method)": [[11, "medicaid_utils.common_utils.usps_address.USPSShippingAPI.send_request"]], "setup_logger() (in module medicaid_utils.common_utils.recipes)": [[11, "medicaid_utils.common_utils.recipes.setup_logger"]], "standardized() (medicaid_utils.common_utils.usps_address.uspsaddress method)": [[11, "medicaid_utils.common_utils.usps_address.USPSAddress.standardized"]], "toggle_datetime_string() (in module medicaid_utils.common_utils.dataframe_utils)": [[11, "medicaid_utils.common_utils.dataframe_utils.toggle_datetime_string"]], "url (medicaid_utils.common_utils.usps_address.uspsshippingapi attribute)": [[11, "medicaid_utils.common_utils.usps_address.USPSShippingAPI.url"]], "zipcode() (medicaid_utils.common_utils.usps_address.uspsaddress method)": [[11, "medicaid_utils.common_utils.usps_address.USPSAddress.zipcode"]], "medicaid_utils.filters": [[12, "module-medicaid_utils.filters"]], "flag_diagnoses_and_procedures() (in module medicaid_utils.filters.claims.dx_and_proc)": [[13, "medicaid_utils.filters.claims.dx_and_proc.flag_diagnoses_and_procedures"]], "flag_prescriptions() (in module medicaid_utils.filters.claims.rx)": [[13, "medicaid_utils.filters.claims.rx.flag_prescriptions"]], "get_patient_ids_with_conditions() (in module medicaid_utils.filters.claims.dx_and_proc)": [[13, "medicaid_utils.filters.claims.dx_and_proc.get_patient_ids_with_conditions"]], "medicaid_utils.filters.claims": [[13, "module-medicaid_utils.filters.claims"]], "medicaid_utils.filters.claims.dx_and_proc": [[13, "module-medicaid_utils.filters.claims.dx_and_proc"]], "medicaid_utils.filters.claims.rx": [[13, "module-medicaid_utils.filters.claims.rx"]], "apply_range_filter() (in module medicaid_utils.filters.patients.cohort_extraction)": [[14, "medicaid_utils.filters.patients.cohort_extraction.apply_range_filter"]], "export_cohort_datasets() (in module medicaid_utils.filters.patients.cohort_extraction)": [[14, "medicaid_utils.filters.patients.cohort_extraction.export_cohort_datasets"]], "extract_cohort() (in module medicaid_utils.filters.patients.cohort_extraction)": [[14, "medicaid_utils.filters.patients.cohort_extraction.extract_cohort"]], "filter_claim_files() (in module medicaid_utils.filters.patients.cohort_extraction)": [[14, "medicaid_utils.filters.patients.cohort_extraction.filter_claim_files"]], "medicaid_utils.filters.patients": [[14, "module-medicaid_utils.filters.patients"]], "medicaid_utils.filters.patients.cohort_extraction": [[14, "module-medicaid_utils.filters.patients.cohort_extraction"]], "clean_address() (in module medicaid_utils.other_datasets.hcris)": [[15, "medicaid_utils.other_datasets.hcris.clean_address"]], "clean_address() (in module medicaid_utils.other_datasets.uds)": [[15, "medicaid_utils.other_datasets.uds.clean_address"]], "clean_hclinic_name() (in module medicaid_utils.other_datasets.hcris)": [[15, "medicaid_utils.other_datasets.hcris.clean_hclinic_name"]], "clean_hclinic_name() (in module medicaid_utils.other_datasets.uds)": [[15, "medicaid_utils.other_datasets.uds.clean_hclinic_name"]], "clean_zip() (in module medicaid_utils.other_datasets.hcris)": [[15, "medicaid_utils.other_datasets.hcris.clean_zip"]], "clean_zip() (in module medicaid_utils.other_datasets.uds)": [[15, "medicaid_utils.other_datasets.uds.clean_zip"]], "cleanup_raw_npi_files() (in module medicaid_utils.other_datasets.npi)": [[15, "medicaid_utils.other_datasets.npi.cleanup_raw_npi_files"]], "combine_and_clean_hcris_files() (in module medicaid_utils.other_datasets.hcris)": [[15, "medicaid_utils.other_datasets.hcris.combine_and_clean_hcris_files"]], "combine_and_clean_uds_files() (in module medicaid_utils.other_datasets.uds)": [[15, "medicaid_utils.other_datasets.uds.combine_and_clean_uds_files"]], "combine_uds_fqhc_npi_crosswalks() (in module medicaid_utils.other_datasets.uds)": [[15, "medicaid_utils.other_datasets.uds.combine_uds_fqhc_npi_crosswalks"]], "compute_basic_match_purity() (in module medicaid_utils.other_datasets.hcris)": [[15, "medicaid_utils.other_datasets.hcris.compute_basic_match_purity"]], "compute_basic_match_purity() (in module medicaid_utils.other_datasets.uds)": [[15, "medicaid_utils.other_datasets.uds.compute_basic_match_purity"]], "compute_door_no_info() (in module medicaid_utils.other_datasets.hcris)": [[15, "medicaid_utils.other_datasets.hcris.compute_door_no_info"]], "compute_door_no_info() (in module medicaid_utils.other_datasets.uds)": [[15, "medicaid_utils.other_datasets.uds.compute_door_no_info"]], "compute_match_purity() (in module medicaid_utils.other_datasets.hcris)": [[15, "medicaid_utils.other_datasets.hcris.compute_match_purity"]], "compute_match_purity() (in module medicaid_utils.other_datasets.uds)": [[15, "medicaid_utils.other_datasets.uds.compute_match_purity"]], "create_npi_fqhc_crosswalk() (in module medicaid_utils.other_datasets.hcris)": [[15, "medicaid_utils.other_datasets.hcris.create_npi_fqhc_crosswalk"]], "create_npi_fqhc_crosswalk() (in module medicaid_utils.other_datasets.uds)": [[15, "medicaid_utils.other_datasets.uds.create_npi_fqhc_crosswalk"]], "filter_partial_matches() (in module medicaid_utils.other_datasets.hcris)": [[15, "medicaid_utils.other_datasets.hcris.filter_partial_matches"]], "filter_partial_matches() (in module medicaid_utils.other_datasets.uds)": [[15, "medicaid_utils.other_datasets.uds.filter_partial_matches"]], "flatten_nppes_query_result() (in module medicaid_utils.other_datasets.hcris)": [[15, "medicaid_utils.other_datasets.hcris.flatten_nppes_query_result"]], "flatten_nppes_query_result() (in module medicaid_utils.other_datasets.uds)": [[15, "medicaid_utils.other_datasets.uds.flatten_nppes_query_result"]], "fuzzy_match() (in module medicaid_utils.other_datasets.hcris)": [[15, "medicaid_utils.other_datasets.hcris.fuzzy_match"]], "fuzzy_match() (in module medicaid_utils.other_datasets.uds)": [[15, "medicaid_utils.other_datasets.uds.fuzzy_match"]], "generate_and_combine_fqhc_npi_crosswalks() (in module medicaid_utils.other_datasets.uds)": [[15, "medicaid_utils.other_datasets.uds.generate_and_combine_fqhc_npi_crosswalks"]], "generate_bhcmisid_fqhc_crosswalk() (in module medicaid_utils.other_datasets.uds)": [[15, "medicaid_utils.other_datasets.uds.generate_bhcmisid_fqhc_crosswalk"]], "generate_npi_taxonomy_mappings() (in module medicaid_utils.other_datasets.npi)": [[15, "medicaid_utils.other_datasets.npi.generate_npi_taxonomy_mappings"]], "generate_oscar_fqhc_npis() (in module medicaid_utils.other_datasets.fqhc)": [[15, "medicaid_utils.other_datasets.fqhc.generate_oscar_fqhc_npis"]], "generate_oscar_fqhc_npis() (in module medicaid_utils.other_datasets.npi)": [[15, "medicaid_utils.other_datasets.npi.generate_oscar_fqhc_npis"]], "generate_oscar_fqhc_npis() (in module medicaid_utils.other_datasets.uds)": [[15, "medicaid_utils.other_datasets.uds.generate_oscar_fqhc_npis"]], "generate_zip_pcsa_ruca_crosswalk() (in module medicaid_utils.other_datasets.zip)": [[15, "medicaid_utils.other_datasets.zip.generate_zip_pcsa_ruca_crosswalk"]], "get_file_name_dict() (in module medicaid_utils.other_datasets.fqhc)": [[15, "medicaid_utils.other_datasets.fqhc.get_file_name_dict"]], "get_file_name_dict() (in module medicaid_utils.other_datasets.uds)": [[15, "medicaid_utils.other_datasets.uds.get_file_name_dict"]], "get_fqhc_crosswalk() (in module medicaid_utils.other_datasets.fqhc)": [[15, "medicaid_utils.other_datasets.fqhc.get_fqhc_crosswalk"]], "get_taxonomies() (in module medicaid_utils.other_datasets.hcris)": [[15, "medicaid_utils.other_datasets.hcris.get_taxonomies"]], "get_taxonomies() (in module medicaid_utils.other_datasets.uds)": [[15, "medicaid_utils.other_datasets.uds.get_taxonomies"]], "medicaid_utils.other_datasets": [[15, "module-medicaid_utils.other_datasets"]], "medicaid_utils.other_datasets.fqhc": [[15, "module-medicaid_utils.other_datasets.fqhc"]], "medicaid_utils.other_datasets.hcris": [[15, "module-medicaid_utils.other_datasets.hcris"]], "medicaid_utils.other_datasets.npi": [[15, "module-medicaid_utils.other_datasets.npi"]], "medicaid_utils.other_datasets.uds": [[15, "module-medicaid_utils.other_datasets.uds"]], "medicaid_utils.other_datasets.zip": [[15, "module-medicaid_utils.other_datasets.zip"]], "nppes_api_requests() (in module medicaid_utils.other_datasets.hcris)": [[15, "medicaid_utils.other_datasets.hcris.nppes_api_requests"]], "nppes_api_requests() (in module medicaid_utils.other_datasets.uds)": [[15, "medicaid_utils.other_datasets.uds.nppes_api_requests"]], "pool_zipcode_pcsa_datasets() (in module medicaid_utils.other_datasets.zip)": [[15, "medicaid_utils.other_datasets.zip.pool_zipcode_pcsa_datasets"]], "process_address_columns() (in module medicaid_utils.other_datasets.hcris)": [[15, "medicaid_utils.other_datasets.hcris.process_address_columns"]], "process_address_columns() (in module medicaid_utils.other_datasets.uds)": [[15, "medicaid_utils.other_datasets.uds.process_address_columns"]], "standardize_addresses() (in module medicaid_utils.other_datasets.hcris)": [[15, "medicaid_utils.other_datasets.hcris.standardize_addresses"]], "standardize_addresses() (in module medicaid_utils.other_datasets.uds)": [[15, "medicaid_utils.other_datasets.uds.standardize_addresses"]], "street_address() (in module medicaid_utils.other_datasets.hcris)": [[15, "medicaid_utils.other_datasets.hcris.street_address"]], "street_address() (in module medicaid_utils.other_datasets.uds)": [[15, "medicaid_utils.other_datasets.uds.street_address"]], "wide_to_long_nppes_taxonomy_file() (in module medicaid_utils.other_datasets.npi)": [[15, "medicaid_utils.other_datasets.npi.wide_to_long_nppes_taxonomy_file"]], "maxcc (class in medicaid_utils.preprocessing.max_cc)": [[16, "medicaid_utils.preprocessing.max_cc.MAXCC"]], "maxfile (class in medicaid_utils.preprocessing.max_file)": [[16, "medicaid_utils.preprocessing.max_file.MAXFile"]], "maxip (class in medicaid_utils.preprocessing.max_ip)": [[16, "medicaid_utils.preprocessing.max_ip.MAXIP"]], "maxot (class in medicaid_utils.preprocessing.max_ot)": [[16, "medicaid_utils.preprocessing.max_ot.MAXOT"]], "maxps (class in medicaid_utils.preprocessing.max_ps)": [[16, "medicaid_utils.preprocessing.max_ps.MAXPS"]], "taffile (class in medicaid_utils.preprocessing.taf_file)": [[16, "medicaid_utils.preprocessing.taf_file.TAFFile"]], "tafip (class in medicaid_utils.preprocessing.taf_ip)": [[16, "medicaid_utils.preprocessing.taf_ip.TAFIP"]], "taflt (class in medicaid_utils.preprocessing.taf_lt)": [[16, "medicaid_utils.preprocessing.taf_lt.TAFLT"]], "tafot (class in medicaid_utils.preprocessing.taf_ot)": [[16, "medicaid_utils.preprocessing.taf_ot.TAFOT"]], "tafps (class in medicaid_utils.preprocessing.taf_ps)": [[16, "medicaid_utils.preprocessing.taf_ps.TAFPS"]], "tafrx (class in medicaid_utils.preprocessing.taf_rx)": [[16, "medicaid_utils.preprocessing.taf_rx.TAFRX"]], "add_eligibility_status_columns() (medicaid_utils.preprocessing.max_ps.maxps method)": [[16, "medicaid_utils.preprocessing.max_ps.MAXPS.add_eligibility_status_columns"]], "add_gender() (medicaid_utils.preprocessing.max_file.maxfile method)": [[16, "medicaid_utils.preprocessing.max_file.MAXFile.add_gender"]], "add_gender() (medicaid_utils.preprocessing.taf_ps.tafps method)": [[16, "medicaid_utils.preprocessing.taf_ps.TAFPS.add_gender"]], "add_mas_boe() (medicaid_utils.preprocessing.taf_ps.tafps method)": [[16, "medicaid_utils.preprocessing.taf_ps.TAFPS.add_mas_boe"]], "add_ot_flags() (medicaid_utils.preprocessing.max_ot.maxot method)": [[16, "medicaid_utils.preprocessing.max_ot.MAXOT.add_ot_flags"]], "add_risk_adjustment_scores() (medicaid_utils.preprocessing.taf_ps.tafps method)": [[16, "medicaid_utils.preprocessing.taf_ps.TAFPS.add_risk_adjustment_scores"]], "agg_conditions() (medicaid_utils.preprocessing.max_cc.maxcc method)": [[16, "medicaid_utils.preprocessing.max_cc.MAXCC.agg_conditions"]], "cache_results() (medicaid_utils.preprocessing.max_file.maxfile method)": [[16, "medicaid_utils.preprocessing.max_file.MAXFile.cache_results"]], "cache_results() (medicaid_utils.preprocessing.taf_file.taffile method)": [[16, "medicaid_utils.preprocessing.taf_file.TAFFile.cache_results"]], "calculate_payment() (medicaid_utils.preprocessing.max_file.maxfile method)": [[16, "medicaid_utils.preprocessing.max_file.MAXFile.calculate_payment"]], "clean() (medicaid_utils.preprocessing.max_file.maxfile method)": [[16, "medicaid_utils.preprocessing.max_file.MAXFile.clean"]], "clean() (medicaid_utils.preprocessing.max_ip.maxip method)": [[16, "medicaid_utils.preprocessing.max_ip.MAXIP.clean"]], "clean() (medicaid_utils.preprocessing.max_ot.maxot method)": [[16, "medicaid_utils.preprocessing.max_ot.MAXOT.clean"]], "clean() (medicaid_utils.preprocessing.max_ps.maxps method)": [[16, "medicaid_utils.preprocessing.max_ps.MAXPS.clean"]], "clean() (medicaid_utils.preprocessing.taf_file.taffile method)": [[16, "medicaid_utils.preprocessing.taf_file.TAFFile.clean"]], "clean() (medicaid_utils.preprocessing.taf_ip.tafip method)": [[16, "medicaid_utils.preprocessing.taf_ip.TAFIP.clean"]], "clean() (medicaid_utils.preprocessing.taf_lt.taflt method)": [[16, "medicaid_utils.preprocessing.taf_lt.TAFLT.clean"]], "clean() (medicaid_utils.preprocessing.taf_ot.tafot method)": [[16, "medicaid_utils.preprocessing.taf_ot.TAFOT.clean"]], "clean() (medicaid_utils.preprocessing.taf_ps.tafps method)": [[16, "medicaid_utils.preprocessing.taf_ps.TAFPS.clean"]], "clean() (medicaid_utils.preprocessing.taf_rx.tafrx method)": [[16, "medicaid_utils.preprocessing.taf_rx.TAFRX.clean"]], "clean_codes() (medicaid_utils.preprocessing.taf_file.taffile method)": [[16, "medicaid_utils.preprocessing.taf_file.TAFFile.clean_codes"]], "clean_diag_codes() (medicaid_utils.preprocessing.max_file.maxfile method)": [[16, "medicaid_utils.preprocessing.max_file.MAXFile.clean_diag_codes"]], "clean_diag_codes() (medicaid_utils.preprocessing.taf_file.taffile method)": [[16, "medicaid_utils.preprocessing.taf_file.TAFFile.clean_diag_codes"]], "clean_ndc_codes() (medicaid_utils.preprocessing.taf_file.taffile method)": [[16, "medicaid_utils.preprocessing.taf_file.TAFFile.clean_ndc_codes"]], "clean_proc_codes() (medicaid_utils.preprocessing.max_file.maxfile method)": [[16, "medicaid_utils.preprocessing.max_file.MAXFile.clean_proc_codes"]], "clean_proc_codes() (medicaid_utils.preprocessing.taf_file.taffile method)": [[16, "medicaid_utils.preprocessing.taf_file.TAFFile.clean_proc_codes"]], "compute_enrollment_gaps() (medicaid_utils.preprocessing.taf_ps.tafps method)": [[16, "medicaid_utils.preprocessing.taf_ps.TAFPS.compute_enrollment_gaps"]], "export() (medicaid_utils.preprocessing.max_file.maxfile method)": [[16, "medicaid_utils.preprocessing.max_file.MAXFile.export"]], "export() (medicaid_utils.preprocessing.taf_file.taffile method)": [[16, "medicaid_utils.preprocessing.taf_file.TAFFile.export"]], "find_ot_ip_overlaps() (medicaid_utils.preprocessing.max_ot.maxot method)": [[16, "medicaid_utils.preprocessing.max_ot.MAXOT.find_ot_ip_overlaps"]], "flag_common_exclusions() (medicaid_utils.preprocessing.max_ip.maxip method)": [[16, "medicaid_utils.preprocessing.max_ip.MAXIP.flag_common_exclusions"]], "flag_common_exclusions() (medicaid_utils.preprocessing.max_ot.maxot method)": [[16, "medicaid_utils.preprocessing.max_ot.MAXOT.flag_common_exclusions"]], "flag_common_exclusions() (medicaid_utils.preprocessing.max_ps.maxps method)": [[16, "medicaid_utils.preprocessing.max_ps.MAXPS.flag_common_exclusions"]], "flag_common_exclusions() (medicaid_utils.preprocessing.taf_ip.tafip method)": [[16, "medicaid_utils.preprocessing.taf_ip.TAFIP.flag_common_exclusions"]], "flag_common_exclusions() (medicaid_utils.preprocessing.taf_ot.tafot method)": [[16, "medicaid_utils.preprocessing.taf_ot.TAFOT.flag_common_exclusions"]], "flag_common_exclusions() (medicaid_utils.preprocessing.taf_ps.tafps method)": [[16, "medicaid_utils.preprocessing.taf_ps.TAFPS.flag_common_exclusions"]], "flag_dental() (medicaid_utils.preprocessing.max_ot.maxot method)": [[16, "medicaid_utils.preprocessing.max_ot.MAXOT.flag_dental"]], "flag_dual() (medicaid_utils.preprocessing.taf_ps.tafps method)": [[16, "medicaid_utils.preprocessing.taf_ps.TAFPS.flag_dual"]], "flag_duals() (medicaid_utils.preprocessing.max_ps.maxps method)": [[16, "medicaid_utils.preprocessing.max_ps.MAXPS.flag_duals"]], "flag_duplicates() (medicaid_utils.preprocessing.max_ip.maxip method)": [[16, "medicaid_utils.preprocessing.max_ip.MAXIP.flag_duplicates"]], "flag_duplicates() (medicaid_utils.preprocessing.max_ot.maxot method)": [[16, "medicaid_utils.preprocessing.max_ot.MAXOT.flag_duplicates"]], "flag_duplicates() (medicaid_utils.preprocessing.taf_file.taffile method)": [[16, "medicaid_utils.preprocessing.taf_file.TAFFile.flag_duplicates"]], "flag_ed_use() (medicaid_utils.preprocessing.max_file.maxfile method)": [[16, "medicaid_utils.preprocessing.max_file.MAXFile.flag_ed_use"]], "flag_em() (medicaid_utils.preprocessing.max_ot.maxot method)": [[16, "medicaid_utils.preprocessing.max_ot.MAXOT.flag_em"]], "flag_ffs_and_encounter_claims() (medicaid_utils.preprocessing.taf_file.taffile method)": [[16, "medicaid_utils.preprocessing.taf_file.TAFFile.flag_ffs_and_encounter_claims"]], "flag_ffs_months() (medicaid_utils.preprocessing.taf_ps.tafps method)": [[16, "medicaid_utils.preprocessing.taf_ps.TAFPS.flag_ffs_months"]], "flag_ip_overlaps() (medicaid_utils.preprocessing.max_ip.maxip method)": [[16, "medicaid_utils.preprocessing.max_ip.MAXIP.flag_ip_overlaps"]], "flag_ip_overlaps_and_ed() (medicaid_utils.preprocessing.max_ot.maxot method)": [[16, "medicaid_utils.preprocessing.max_ot.MAXOT.flag_ip_overlaps_and_ed"]], "flag_managed_care_months() (medicaid_utils.preprocessing.taf_ps.tafps method)": [[16, "medicaid_utils.preprocessing.taf_ps.TAFPS.flag_managed_care_months"]], "flag_medicaid_enrolled_months() (medicaid_utils.preprocessing.taf_ps.tafps method)": [[16, "medicaid_utils.preprocessing.taf_ps.TAFPS.flag_medicaid_enrolled_months"]], "flag_restricted_benefits() (medicaid_utils.preprocessing.max_ps.maxps method)": [[16, "medicaid_utils.preprocessing.max_ps.MAXPS.flag_restricted_benefits"]], "flag_restricted_benefits() (medicaid_utils.preprocessing.taf_ps.tafps method)": [[16, "medicaid_utils.preprocessing.taf_ps.TAFPS.flag_restricted_benefits"]], "flag_rural() (medicaid_utils.preprocessing.max_ps.maxps method)": [[16, "medicaid_utils.preprocessing.max_ps.MAXPS.flag_rural"]], "flag_rural() (medicaid_utils.preprocessing.taf_ps.tafps method)": [[16, "medicaid_utils.preprocessing.taf_ps.TAFPS.flag_rural"]], "flag_tanf() (medicaid_utils.preprocessing.max_ps.maxps method)": [[16, "medicaid_utils.preprocessing.max_ps.MAXPS.flag_tanf"]], "flag_tanf() (medicaid_utils.preprocessing.taf_ps.tafps method)": [[16, "medicaid_utils.preprocessing.taf_ps.TAFPS.flag_tanf"]], "flag_transport() (medicaid_utils.preprocessing.max_ot.maxot method)": [[16, "medicaid_utils.preprocessing.max_ot.MAXOT.flag_transport"]], "gather_bene_level_diag_ndc_codes() (medicaid_utils.preprocessing.taf_file.taffile method)": [[16, "medicaid_utils.preprocessing.taf_file.TAFFile.gather_bene_level_diag_ndc_codes"]], "gather_bene_level_diag_ndc_codes() (medicaid_utils.preprocessing.taf_ps.tafps method)": [[16, "medicaid_utils.preprocessing.taf_ps.TAFPS.gather_bene_level_diag_ndc_codes"]], "get_chronic_conditions() (medicaid_utils.preprocessing.max_cc.maxcc method)": [[16, "medicaid_utils.preprocessing.max_cc.MAXCC.get_chronic_conditions"]], "get_claim_instance() (medicaid_utils.preprocessing.max_file.maxfile class method)": [[16, "medicaid_utils.preprocessing.max_file.MAXFile.get_claim_instance"]], "get_claim_instance() (medicaid_utils.preprocessing.taf_file.taffile class method)": [[16, "medicaid_utils.preprocessing.taf_file.TAFFile.get_claim_instance"]], "medicaid_utils.preprocessing": [[16, "module-medicaid_utils.preprocessing"]], "medicaid_utils.preprocessing.max_cc": [[16, "module-medicaid_utils.preprocessing.max_cc"]], "medicaid_utils.preprocessing.max_file": [[16, "module-medicaid_utils.preprocessing.max_file"]], "medicaid_utils.preprocessing.max_ip": [[16, "module-medicaid_utils.preprocessing.max_ip"]], "medicaid_utils.preprocessing.max_ot": [[16, "module-medicaid_utils.preprocessing.max_ot"]], "medicaid_utils.preprocessing.max_ps": [[16, "module-medicaid_utils.preprocessing.max_ps"]], "medicaid_utils.preprocessing.taf_file": [[16, "module-medicaid_utils.preprocessing.taf_file"]], "medicaid_utils.preprocessing.taf_ip": [[16, "module-medicaid_utils.preprocessing.taf_ip"]], "medicaid_utils.preprocessing.taf_lt": [[16, "module-medicaid_utils.preprocessing.taf_lt"]], "medicaid_utils.preprocessing.taf_ot": [[16, "module-medicaid_utils.preprocessing.taf_ot"]], "medicaid_utils.preprocessing.taf_ps": [[16, "module-medicaid_utils.preprocessing.taf_ps"]], "medicaid_utils.preprocessing.taf_rx": [[16, "module-medicaid_utils.preprocessing.taf_rx"]], "pq_export() (medicaid_utils.preprocessing.max_file.maxfile method)": [[16, "medicaid_utils.preprocessing.max_file.MAXFile.pq_export"]], "pq_export() (medicaid_utils.preprocessing.taf_file.taffile method)": [[16, "medicaid_utils.preprocessing.taf_file.TAFFile.pq_export"]], "preprocess() (medicaid_utils.preprocessing.max_file.maxfile method)": [[16, "medicaid_utils.preprocessing.max_file.MAXFile.preprocess"]], "preprocess() (medicaid_utils.preprocessing.max_ip.maxip method)": [[16, "medicaid_utils.preprocessing.max_ip.MAXIP.preprocess"]], "preprocess() (medicaid_utils.preprocessing.max_ot.maxot method)": [[16, "medicaid_utils.preprocessing.max_ot.MAXOT.preprocess"]], "preprocess() (medicaid_utils.preprocessing.max_ps.maxps method)": [[16, "medicaid_utils.preprocessing.max_ps.MAXPS.preprocess"]], "preprocess() (medicaid_utils.preprocessing.taf_file.taffile method)": [[16, "medicaid_utils.preprocessing.taf_file.TAFFile.preprocess"]], "preprocess() (medicaid_utils.preprocessing.taf_ip.tafip method)": [[16, "medicaid_utils.preprocessing.taf_ip.TAFIP.preprocess"]], "preprocess() (medicaid_utils.preprocessing.taf_lt.taflt method)": [[16, "medicaid_utils.preprocessing.taf_lt.TAFLT.preprocess"]], "preprocess() (medicaid_utils.preprocessing.taf_ot.tafot method)": [[16, "medicaid_utils.preprocessing.taf_ot.TAFOT.preprocess"]], "preprocess() (medicaid_utils.preprocessing.taf_ps.tafps method)": [[16, "medicaid_utils.preprocessing.taf_ps.TAFPS.preprocess"]], "process_date_cols() (medicaid_utils.preprocessing.max_file.maxfile method)": [[16, "medicaid_utils.preprocessing.max_file.MAXFile.process_date_cols"]], "process_date_cols() (medicaid_utils.preprocessing.taf_file.taffile method)": [[16, "medicaid_utils.preprocessing.taf_file.TAFFile.process_date_cols"]], "medicaid_utils.topics": [[17, "module-medicaid_utils.topics"]], "calculate_conception() (in module medicaid_utils.topics.obgyn.hospitalization)": [[18, "medicaid_utils.topics.obgyn.hospitalization.calculate_conception"]], "flag_abnormal_pregnancy() (in module medicaid_utils.topics.obgyn.hospitalization)": [[18, "medicaid_utils.topics.obgyn.hospitalization.flag_abnormal_pregnancy"]], "flag_chronic_conditions() (in module medicaid_utils.topics.obgyn.comorbities)": [[18, "medicaid_utils.topics.obgyn.comorbities.flag_chronic_conditions"]], "flag_delivery() (in module medicaid_utils.topics.obgyn.hospitalization)": [[18, "medicaid_utils.topics.obgyn.hospitalization.flag_delivery"]], "flag_delivery_mode() (in module medicaid_utils.topics.obgyn.hospitalization)": [[18, "medicaid_utils.topics.obgyn.hospitalization.flag_delivery_mode"]], "flag_multiple_births() (in module medicaid_utils.topics.obgyn.hospitalization)": [[18, "medicaid_utils.topics.obgyn.hospitalization.flag_multiple_births"]], "flag_prenatal() (in module medicaid_utils.topics.obgyn.hospitalization)": [[18, "medicaid_utils.topics.obgyn.hospitalization.flag_prenatal"]], "flag_preterm() (in module medicaid_utils.topics.obgyn.hospitalization)": [[18, "medicaid_utils.topics.obgyn.hospitalization.flag_preterm"]], "flag_religious_npis() (in module medicaid_utils.topics.obgyn.cohort_indicators)": [[18, "medicaid_utils.topics.obgyn.cohort_indicators.flag_religious_npis"]], "flag_smm_events() (in module medicaid_utils.topics.obgyn.hospitalization)": [[18, "medicaid_utils.topics.obgyn.hospitalization.flag_smm_events"]], "flag_transfers() (in module medicaid_utils.topics.obgyn.cohort_indicators)": [[18, "medicaid_utils.topics.obgyn.cohort_indicators.flag_transfers"]], "medicaid_utils.topics.obgyn": [[18, "module-medicaid_utils.topics.obgyn"]], "medicaid_utils.topics.obgyn.cohort_indicators": [[18, "module-medicaid_utils.topics.obgyn.cohort_indicators"]], "medicaid_utils.topics.obgyn.comorbities": [[18, "module-medicaid_utils.topics.obgyn.comorbities"]], "medicaid_utils.topics.obgyn.hospitalization": [[18, "module-medicaid_utils.topics.obgyn.hospitalization"]], "flag_care_settings() (in module medicaid_utils.topics.oud.care_settings)": [[19, "medicaid_utils.topics.oud.care_settings.flag_care_settings"]], "flag_cooccurring_mental_health_claims() (in module medicaid_utils.topics.oud.cooccurring_conditions)": [[19, "medicaid_utils.topics.oud.cooccurring_conditions.flag_cooccurring_mental_health_claims"]], "flag_cooccurring_sud_claims() (in module medicaid_utils.topics.oud.cooccurring_conditions)": [[19, "medicaid_utils.topics.oud.cooccurring_conditions.flag_cooccurring_sud_claims"]], "flag_proc_behavioral_health_trtmt() (in module medicaid_utils.topics.oud.medication_and_behavioral_health)": [[19, "medicaid_utils.topics.oud.medication_and_behavioral_health.flag_proc_behavioral_health_trtmt"]], "flag_proc_buprenorphine() (in module medicaid_utils.topics.oud.medication_and_behavioral_health)": [[19, "medicaid_utils.topics.oud.medication_and_behavioral_health.flag_proc_buprenorphine"]], "flag_proc_buprenorphine_naloxone() (in module medicaid_utils.topics.oud.medication_and_behavioral_health)": [[19, "medicaid_utils.topics.oud.medication_and_behavioral_health.flag_proc_buprenorphine_naloxone"]], "flag_proc_injectable_naltrexone() (in module medicaid_utils.topics.oud.medication_and_behavioral_health)": [[19, "medicaid_utils.topics.oud.medication_and_behavioral_health.flag_proc_injectable_naltrexone"]], "flag_proc_methadone() (in module medicaid_utils.topics.oud.medication_and_behavioral_health)": [[19, "medicaid_utils.topics.oud.medication_and_behavioral_health.flag_proc_methadone"]], "flag_rx_benzos_opioids() (in module medicaid_utils.topics.oud.medication_and_behavioral_health)": [[19, "medicaid_utils.topics.oud.medication_and_behavioral_health.flag_rx_benzos_opioids"]], "flag_rx_buprenorphine() (in module medicaid_utils.topics.oud.medication_and_behavioral_health)": [[19, "medicaid_utils.topics.oud.medication_and_behavioral_health.flag_rx_buprenorphine"]], "flag_rx_buprenorphine_naloxone() (in module medicaid_utils.topics.oud.medication_and_behavioral_health)": [[19, "medicaid_utils.topics.oud.medication_and_behavioral_health.flag_rx_buprenorphine_naloxone"]], "flag_rx_methadone() (in module medicaid_utils.topics.oud.medication_and_behavioral_health)": [[19, "medicaid_utils.topics.oud.medication_and_behavioral_health.flag_rx_methadone"]], "flag_rx_oral_naltrexone() (in module medicaid_utils.topics.oud.medication_and_behavioral_health)": [[19, "medicaid_utils.topics.oud.medication_and_behavioral_health.flag_rx_oral_naltrexone"]], "medicaid_utils.topics.oud": [[19, "module-medicaid_utils.topics.oud"]], "medicaid_utils.topics.oud.care_settings": [[19, "module-medicaid_utils.topics.oud.care_settings"]], "medicaid_utils.topics.oud.cooccurring_conditions": [[19, "module-medicaid_utils.topics.oud.cooccurring_conditions"]], "medicaid_utils.topics.oud.medication_and_behavioral_health": [[19, "module-medicaid_utils.topics.oud.medication_and_behavioral_health"]]}})